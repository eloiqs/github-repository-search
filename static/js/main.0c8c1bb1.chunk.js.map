{"version":3,"sources":["time/index.ts","personal-access-token/use-personal-access-token.ts","personal-access-token/PersonalAccessToken.tsx","search/search.ts","search/search-query.ts","search/InfiniteSearch.tsx","search/use-infinite-search.ts","index.tsx","app/App.tsx","search-criteria/search-criteria.ts","search-criteria/use-search-criteria.ts","search-criteria/TimeRangesPopoverMenu.tsx","search-criteria/use-languages.ts","search-criteria/LanguagesSelectMenu.tsx","search-criteria/to-query-string.ts","search-criteria/index.ts","ui/Pane.tsx","ui/Column.tsx","ui/Text.tsx","ui/FadeText.tsx","ui/GithubIcon.tsx","ui/Link.tsx","ui/Row.tsx","ui/SelectMenu.tsx","ui/index.ts","search-type/use-search-type.ts","search-type/SearchTypesSelectField.tsx","search-type/index.ts","utils/index.ts","repo/index.ts","api/fetch-languages.ts","api/most-starred-repos.ts","api/trending-repos.ts","api/fetch-repos.ts","api/index.ts","repo/RepoCard.tsx"],"names":["RECURENSE_TO_INCREMENTS","yearly","monthly","weekly","daily","INCREMENTS_TO_RECURENSE","year","month","week","day","toTimeRangeRecurense","timeRangeIncrement","TIME_RANGE_FORMAT","toTimeRange","timeRangeRecurense","timeRangeOffset","increments","toTimeRangeIncrement","from","moment","subtract","format","to","add","createTimeRange","fromNow","timeRange","capitalize","PRETTY_FORMAT","prettyFormat","usePersistedPersonalAccessToken","createPersistedState","initialState","usePersonalAccessToken","personalAccessToken","setPersonalAccessToken","PersonalAccessToken","content","close","PopoverBody","appearance","persistedPersonalAccessToken","setPersistedPersonalAccessToken","useState","personalAccesToken","width","padding","paddingBottom","target","href","value","onChange","evt","justifyContent","intent","onClick","createSearch","queries","loading","createSearchQuery","results","InfiniteSearch","searchType","useSearchType","refreshTimeRange","useSearchCriteria","isMounted","useMountedState","getSearchCriteria","searchState","setSearchState","fetchSearch","useCallback","a","searchCriteria","getLoadingState","getResolvedState","state","fetchRepos","repos","fetchInitialSearch","fetchNextSearch","nextTimeRange","length","nextQuery","createSearchCriteria","languages","search","filter","query","nextSearch","slice","isFetchingInitialSearch","isFetchingNextSearch","useInfiniteSearch","useEffect","showFooter","some","margin","SearchHeader","refresh","SearchQueryLoader","repoCount","map","index","SearchQuery","key","JSON","stringify","SearchQueryFooter","onVisible","paddingX","alignItems","marginBottom","grow","marginRight","icon","aria-label","useInView","threshold","ref","inView","SearchQueryHeader","SearchQueryHeaderLoader","flexWrap","Array","_","marginX","data-testid","SearchQueryHeaderContent","repo","url","children","props","size","height","speed","primaryColor","secondaryColor","defaultTheme","colors","background","tint2","ariaLabel","x","y","rx","ry","rootElement","document","getElementById","render","elevation","backgroundColor","palette","blue","base","minHeight","paddingRight","color","is","iconBefore","style","marginLeft","paddingY","order","page","per_page","initialSearchCriteriaState","usePersistedSearchCriteria","persistedSearchCriteria","setPersistedSearchCriteria","getRefreshedSearchCriteria","criteria","setSearchCriteria","TimeRangesPopoverMenu","setTimeRangeRecurense","onSelect","Group","Item","usePersistedLanguages","initialLanguagesState","timestamp","useLanguages","isLoading","setIsLoading","persistedLanguages","setPersistedLanguages","diff","fetchLanguages","LanguagesSelectMenu","selectedLanguages","setSelectedLanguages","label","join","options","name","isMultiSelect","title","selected","item","onDeselect","deselectedItem","language","toQueryString","created","reduce","q","lang","Pane","evergreen","Column","card","display","flexDirection","minWidth","flexGrow","Text","FadeText","className","position","overflow","GithubIcon","fill","preserveAspectRatio","viewBox","d","Link","Row","SelectMenu","usePersistedSearchType","initialSearchTypeState","setSearchType","SearchTypesSelectField","inputWidth","_string","charAt","toUpperCase","flatZip","arrs","arr","rest","flatArr","val","i","githubLinguistYmlUrl","fetch","res","text","yml","json","jsyaml","safeLoad","Object","keys","Octokit","auth","sort","response","data","items","html_url","owner","login","avatarUrl","avatar_url","createdAt","created_at","description","stars","stargazers_count","forks","forks_count","issues","open_issues_count","since","Promise","all","fetchRepositories","createRepo","trendingRepo","author","avatar","languageColor","currentPeriodStars","fetchMostStarredRepos","fetchTrendingRepos","RepoCard","RepoCardContent","find","src","textDecoration","fontSize","RepoCardLoader"],"mappings":"iLAAA,uMAaMA,EAGD,CACHC,OAAQ,OACRC,QAAS,QACTC,OAAQ,OACRC,MAAO,OAST,IAAMC,EAGD,CACHC,KAAM,SACNC,MAAO,UACPC,KAAM,SACNC,IAAK,SAGA,SAASC,EACdC,GAEA,OAAON,EAAwBM,GAGjC,IAAMC,EAAoB,aAEnB,SAASC,EACdC,GAEY,IADZC,EACW,uDADO,EAEZC,EA5BD,SACLF,GAEA,OAAOd,EAAwBc,GAyBZG,CAAqBH,GAElCI,EAAOC,MACVC,SAAS,EAAIL,EAAiBC,GAC9BK,OAAOT,GAMV,MAAO,CACLI,aACAE,OACAI,GAPSH,IAAOD,GACfK,IAAI,EAAGP,GACPK,OAAOT,IASL,SAASY,EACdR,GAEC,IADDD,EACA,uDADkB,EAGlB,OAAOF,EADWH,EAAqBM,GACTD,GAGzB,SAASU,EAAQC,GACtB,OAAOC,YAAWR,IAAOO,EAAUR,MAAMO,WAG3C,IAAMG,EAAgB,gBAEf,SAASC,EAAaH,GAC3B,IAAMR,EAAOC,IAAOO,EAAUR,MAAMG,OAAOO,GACrCN,EAAKH,IAAOO,EAAUJ,IAAID,OAAOO,GACvC,MAAM,GAAN,OAAUV,EAAV,mBAAoBI,K,wHCnFhBQ,EAAkCC,YACtC,oCAGIC,EAAe,GAEd,SAASC,IAA0B,IAAD,EAInCH,EAAgCE,GAJG,mBAMvC,MAAO,CACLE,oBAPqC,KAQrCC,uBARqC,MCJlC,SAASC,IACd,OACE,kBAAC,IAAD,CAASC,QAAS,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAACC,EAAD,CAAaD,MAAOA,MACnD,kBAAC,IAAD,CAAQE,WAAW,WAAnB,gCAON,SAASD,EAAT,GAAmD,IAA5BD,EAA2B,EAA3BA,MAA2B,EAI5CL,IAFmBQ,EAFyB,EAE9CP,oBACwBQ,EAHsB,EAG9CP,uBAH8C,EAMKQ,mBACnDF,GAP8C,mBAMzCG,EANyC,KAMrBT,EANqB,KAmBhD,OACE,kBAAC,IAAD,CAAQU,MAAO,IAAKC,QAAS,IAC3B,kBAAC,IAAD,CAAKC,cAAe,IAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,OAAO,SAASC,KAAK,sCAA3B,oBAEQ,IAHV,sDAOF,kBAAC,IAAD,CAAKF,cAAe,IAClB,kBAAC,IAAD,CACEG,MAAON,EACPO,SAtBR,SAAqCC,GACnCjB,EAAuBiB,EAAIJ,OAAOE,WAwBhC,kBAAC,IAAD,CAAKH,cAAe,GAAIM,eAAe,YACrC,kBAAC,IAAD,CAAQb,WAAW,UAAUc,OAAO,UAAUC,QAtBpD,WACEb,EAAgCE,GAChCN,MAoBI,U,+GC3CD,SAASkB,EAAaC,EAAwBC,GACnD,MAAO,CACLD,UACAC,WCDG,SAASC,EACdjC,EACAgC,GAGA,MAAO,CACLhC,YACAgC,UACAE,QAJW,uDADY,MCYpB,SAASC,IAAkB,IACxBC,EAAeC,cAAfD,WACAE,EAAqBC,cAArBD,iBAFuB,ECH1B,WACL,IAAME,EAAYC,cACVjC,EAAwBD,IAAxBC,oBACA4B,EAAeC,cAAfD,WACAM,EAAsBH,cAAtBG,kBAJ0B,EAKIzB,mBAASa,EAAa,IAAI,IAL9B,mBAK3Ba,EAL2B,KAKdC,EALc,KAO5BC,EAAcC,sBAAW,uCAC7B,mCAAAC,EAAA,6DACEC,EADF,EACEA,eACAC,EAFF,EAEEA,gBACAC,EAHF,EAGEA,iBAEAN,GAAe,SAAAO,GAAK,OAAIF,EAAgBE,MAL1C,SAOsBC,YAClBhB,EACAY,EACAxC,GAVJ,OAOQ6C,EAPR,OAaMb,KACFI,GAAe,SAAAO,GAAK,OAAID,EAAiBG,EAAOF,MAdpD,2CAD6B,sDAkB7B,CAACX,EAAWhC,EAAqB4B,IAG7BkB,EAAqBR,sBAAW,sBAAC,sBAAAC,EAAA,sDACrCF,EAAY,CACVG,eAAgBN,IAChBO,gBAAiB,kBACfnB,EACE,CAACG,EAAkBS,IAAoB1C,WAAW,KAClD,IAEJkD,iBAAkB,SAAAG,GAAK,OACrBvB,EACE,CAACG,EAAkBS,IAAoB1C,WAAW,EAAOqD,KACzD,MAX+B,2CAcpC,CAACR,EAAaH,IAEXa,EAAkBT,sBAAW,sBAAC,8BAAAC,EAAA,sDAC5BS,EAAgB1D,YACpB4C,IAAoB1C,UAAUV,WAC9BqD,EAAYZ,QAAQ0B,QAGhBC,EAAYzB,EAAkBuB,GAAe,GAEnDX,EAAY,CACVG,eAAgBW,YACdjB,IAAoBkB,UACpBJ,GAEFP,gBAAiB,SAAAY,GAEf,OAAO/B,EADM,sBAAO+B,EAAO9B,SAAd,CAAuB2B,IACPG,EAAO7B,UAEtCkB,iBAAkB,SAACG,EAAOQ,GAKxB,OAAO/B,EAJM,sBACR+B,EAAO9B,QAAQ+B,QAAO,SAAAC,GAAK,OAAIA,IAAUL,MADjC,CAEXzB,EAAkBuB,GAAe,EAAOH,MAEb,MAtBC,2CAyBjC,CAACR,EAAaH,EAAmBC,EAAYZ,QAAQ0B,SAElDO,EACJrB,EAAYZ,QAAQ0B,OAAS,EAAId,EAAYZ,QAAQkC,OAAO,GAAG,GAAK,KAEtE,MAAO,CACLlC,QAASY,EAAYZ,QACrBuB,qBACAY,wBAAyBvB,EAAYX,QACrCuB,kBACAY,qBAAsBxB,EAAYX,UAAZ,OAAuBgC,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAYhC,UDnEvDoC,GALFrC,EAJ6B,EAI7BA,QACAuB,EAL6B,EAK7BA,mBACAY,EAN6B,EAM7BA,wBACAX,EAP6B,EAO7BA,gBACAY,EAR6B,EAQ7BA,qBAGFE,qBAAU,WACRf,MACC,CAACA,IAEJ,IAAMgB,EACW,iBAAflC,IACC8B,IACAC,GACDpC,EAAQwC,MAAK,SAAAR,GAAK,OAAIA,EAAM7B,SAAW6B,EAAM7B,QAAQuB,UAEvD,OACE,kBAAC,IAAD,CAAQtC,MAAO,KAAMqD,OAAO,QAC1B,kBAACC,EAAD,CAAcC,QAASpC,IACtB4B,EACC,kBAACS,EAAD,CAAmBC,UAAW,KAE9B,oCACG7C,EAAQ8C,KAAI,SAACd,EAAOe,GAAR,OACX,kBAACC,EAAD,CACEC,IAAKC,KAAKC,UAAUnB,EAAM/D,WAC1B8E,MAAOA,EACPf,MAAOA,QAKdO,GAAc,kBAACa,EAAD,CAAmBC,UAAW7B,KAKnD,SAASkB,EAAT,GAAyD,IAAjCC,EAAgC,EAAhCA,QACtB,OACE,kBAAC,IAAD,CAAKW,SAAU,GAAIC,WAAW,SAASC,aAAc,IACnD,kBAAC,IAAD,CAAQC,MAAI,GACV,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAQC,YAAa,IACnB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAQA,YAAa,IACnB,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,KAAK,UAAU7D,QAAS6C,EAASiB,aAAW,cAMhE,SAASR,EAAT,GAAqE,IAAxCC,EAAuC,EAAvCA,UAAuC,EAC5CQ,YAAU,CAAEC,UAAW,IADqB,mBAC3DC,EAD2D,KACtDC,EADsD,KASlE,OANA1B,qBAAU,WACJ0B,GACFX,MAED,CAACW,EAAQX,IAGV,yBAAKU,IAAKA,GACR,kBAACnB,EAAD,CAAmBC,UAAW,KAKpC,SAASD,EAAT,GAAkE,IAArCC,EAAoC,EAApCA,UAC3B,OACE,oCACE,kBAACoB,EAAD,KACE,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAKC,SAAS,OAAOvE,eAAe,UACjCwE,MAAM3G,KAAK2G,MAAMvB,IAAYC,KAAI,SAACuB,EAAGtB,GAAJ,OAChC,kBAAC,WAAD,CAAUE,IAAKF,EAAOuB,QAAS,IAC7B,kBAAC,iBAAD,YAQZ,SAAStB,EAAT,GAAyE,IAAD,EAAjDhB,EAAiD,EAAjDA,MAAOe,EAA0C,EAA1CA,MAC5B,OAAOf,EAAM/B,QACX,kBAAC2C,EAAD,CAAmBC,UAAW,KAE9B,yBAAK0B,cAAA,gBAAsBxB,IACzB,kBAACkB,EAAD,KACE,kBAACO,EAAD,CAA0BvG,UAAW+D,EAAM/D,aAE7C,kBAAC,IAAD,CAAKkG,SAAS,OAAOvE,eAAe,UAApC,UACGoC,EAAM7B,eADT,aACG,EAAe2C,KAAI,SAAA2B,GAAI,OACtB,kBAAC,WAAD,CAAUxB,IAAKwB,EAAKC,IAAKJ,QAAS,IAChC,kBAAC,kBAAD,CAAiBG,KAAMA,EAAMxG,UAAW+D,EAAM/D,kBAQ1D,SAASgG,EAAT,GAA8D,IAAjCU,EAAgC,EAAhCA,SAAaC,EAAmB,4BAC3D,OACE,kBAAC,IAAD,eAAKtB,SAAU,GAAIC,WAAW,SAASC,aAAc,IAAQoB,GAC1DD,GAKP,SAASH,EAAT,GAA4E,IAAxCvG,EAAuC,EAAvCA,UAClC,OACE,kBAAC,IAAD,CAAQwF,MAAI,GACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASoB,KAAM,KAAM7G,YAAQC,KAE/B,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAOG,YAAaH,MAM5B,SAASiG,IACP,OACE,kBAAC,IAAD,CAAM9E,MAAO,IAAK0F,OAAQ,IACxB,kBAAC,IAAD,CACEA,OAAQ,GACR1F,MAAO,IACP2F,MAAO,EACPC,aAAa,UACbC,eAAgBC,IAAaC,OAAOC,WAAWC,MAC/CC,UAAU,kCAEV,0BAAMC,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAItG,MAAM,MAAM0F,OAAO,OACnD,0BAAMS,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAItG,MAAM,MAAM0F,OAAO,S,WEpKtDa,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,mBCMA,WACL,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,UAAW,EACXC,gBAAiBd,IAAae,QAAQC,KAAKC,KAC3C7C,SAAU,EACV8C,UAAW,GACX7C,WAAW,UAEX,kBAAC,IAAD,CAAQ8C,aAAc,GAAI5C,MAAI,GAC5B,kBAAC,IAAD,CAASoB,KAAM,IAAKyB,MAAM,SAA1B,6BAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,GAAG,IACH/G,KAAK,qDACLD,OAAO,SACPR,WAAW,UACXyH,WAEI,kBAAC,IAAD,CACEF,MAAM,QACNlH,MAAM,OACNqH,MAAO,CAAE/C,YAAa,EAAGgD,YAAa,MAK5C,kBAAC,IAAD,CAAMJ,MAAM,SAAZ,kBAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQlH,MAAM,QACZ,kBAAC,IAAD,CACEoE,aAAc,GACd4B,WAAW,aACXuB,SAAU,EACV/G,eAAe,UAEf,kBAACjB,EAAD,OAEF,kBAAC,IAAD,KACE,kBAACyB,EAAD,YDpDL,MAASuF,I,2FECT,SAAS/D,IAId,MAAO,CACLC,UAFc,uDAFM,GAKpB5D,UAHc,uDADJb,YAAY,UAKtBwJ,MAAO,OACPC,KAAM,EACNC,SAAU,I,YCZDC,EAA6BnF,IAEpCoF,EAA6B1I,YAAqB,uBAEjD,SAASkC,IAAqB,IAAD,EAI9BwG,EAA2BD,GAJG,mBAEhCE,EAFgC,KAGhCC,EAHgC,KAM5BvG,EAAoBI,uBAAY,WACpC,OAAOoG,EAA2BF,KACjC,CAACA,IAEE1G,EAAmBQ,uBAAY,WACnCmG,GAA2B,SAAAE,GAAQ,OACjCD,EAA2BC,QAE5B,CAACF,IAEJ,MAAO,CACLvG,oBACA0G,kBAAmBH,EACnB3G,oBAIJ,SAAS4G,EAA2BC,GAClC,OAAOxF,EACLwF,EAASvF,UACT9D,YAAgBqJ,EAASnJ,UAAUV,aC3BhC,SAAS+J,IAAyB,IAC/BjH,EAAeC,cAAfD,WAD8B,EAEWG,IAAzCG,EAF8B,EAE9BA,kBAAmB0G,EAFW,EAEXA,kBAFW,EAGcnI,mBAClDjC,YAAqB0D,IAAoB1C,UAAUV,aAJf,mBAG/BF,EAH+B,KAGXkK,EAHW,KAgBtC,SAASC,EAASnK,EAAwCwB,GACxD,OAAO,WACL0I,EAAsBlK,GACtBgK,GAAkB,SAAAD,GAAQ,OACxBxF,EACEwF,EAASvF,UACTzE,YAAYC,OAGhBwB,KAIJ,OAtBAyD,qBAAU,WACW,aAAfjC,GAAoD,WAAvBhD,IAC/BkK,EAAsB,WACtBF,GAAkB,SAAAD,GAAQ,OACxBxF,EAAqBwF,EAASvF,UAAWzE,YAAY,kBAGxD,CAACiD,EAAYgH,EAAmBhK,IAgBjC,kBAAC,IAAD,CACEuB,QAAS,gBAAGC,EAAH,EAAGA,MAAH,OACP,kBAAC,IAAD,KACE,kBAAC,IAAK4I,MAAN,KACkB,aAAfpH,GACC,kBAAC,IAAKqH,KAAN,CAAWF,SAAUA,EAAS,SAAU3I,IAAxC,UAEF,kBAAC,IAAK6I,KAAN,CAAWF,SAAUA,EAAS,UAAW3I,IAAzC,WACA,kBAAC,IAAK6I,KAAN,CAAWF,SAAUA,EAAS,SAAU3I,IAAxC,UACA,kBAAC,IAAK6I,KAAN,CAAWF,SAAUA,EAAS,QAAS3I,IAAvC,aAKN,kBAAC,IAAD,CAAQ2H,WAAW,WAAWjC,cAAY,qBACvCrG,YAAWb,K,gFC/CdsK,EAAwBrJ,YAAqB,iBAYtCsJ,EAAuC,CAClD/F,UAAW,GACXgG,UAAW,MAGN,SAASC,IACd,IAAMrH,EAAYC,cADW,EAEKxB,oBAAS,GAFd,mBAEtB6I,EAFsB,KAEXC,EAFW,OAMzBL,EAAsBC,GANG,0BAIdK,EAJc,EAIzBpG,UAA+BgG,EAJN,EAIMA,UACjCK,EAL2B,KA8B7B,OAtBA5F,qBAAU,aACHuF,GAAanK,MAASyK,KAAKzK,IAAOmK,GAAY,QAAU,IAC3D,sBAAC,8BAAA7G,EAAA,6DACCgH,GAAa,GADd,SAGyBI,cAHzB,OAGOvG,EAHP,OAKKpB,MACIoH,EAAYnK,MAASE,SAEzBsF,KAAKC,UAAUtB,KAAeqB,KAAKC,UAAU8E,IAE7CC,EAAsB,CAAErG,YAAWgG,cAGrCK,GAAsB,SAAA9G,GAAK,sBAAUA,EAAV,CAAiByG,iBAC5CG,GAAa,IAdhB,0CAAD,KAkBD,CAACvH,EAAWwH,EAAoBC,EAAuBL,IAEnD,CAAEhG,UAAWoG,EAAoBF,aC/CnC,SAASM,IAAuB,IAAD,EACa7H,IAAzCG,EAD4B,EAC5BA,kBAAmB0G,EADS,EACTA,kBACnBxF,EAAciG,IAAdjG,UAF4B,EAGc3C,mBAChDyB,IAAoBkB,WAJc,mBAG7ByG,EAH6B,KAGVC,EAHU,KAyBpC,IAAMC,EAAQF,EAAkB5G,OAC5B4G,EAAkBG,KAAK,MACvB,mBAEEC,EAAU7G,EAAUiB,KAAI,gBAAG6F,EAAH,EAAGA,KAAH,MAAe,CAAEH,MAAOG,EAAMlJ,MAAOkJ,MAEnE,OACE,kBAAC,IAAD,CACEC,eAAa,EACbC,MAAM,mBACNH,QAASA,EACTI,SAAUR,EACVd,SA9BJ,SAAkBuB,GAChB,IAAMD,EAAQ,sBAAOR,GAAP,CAA0BS,EAAKtJ,QAC7C8I,EAAqBO,GACrBzB,GAAkB,SAAAD,GAAQ,OACxBxF,EAAqBkH,EAAU1B,EAASnJ,eA2BxC+K,WAvBJ,SAAoBC,GAClB,IAAMpH,EAAYyG,EAAkBvG,QAClC,SAAAmH,GAAQ,OAAIA,IAAaD,EAAexJ,SAE1C8I,EAAqB1G,GACrBwF,GAAkB,SAAAD,GAAQ,OACxBxF,EAAqBC,EAAWuF,EAASnJ,gBAmBzC,kBAAC,IAAD,CAAQuI,WAAW,SAASjC,cAAY,oBACrCiE,IC7CF,SAASW,EAAc/B,GAA2B,IAAD,EACjCA,EAASnJ,UAAtBR,EAD8C,EAC9CA,KAAMI,EADwC,EACxCA,GACRuL,EAAO,kBAAc3L,EAAd,aAAuBI,GAEpC,IAAKuJ,EAASvF,UAAUH,OAAQ,OAAO0H,EAEvC,IAAMvH,EAAYuF,EAASvF,UAAUwH,QAAO,SAACC,EAAGC,GAC9C,OAAKD,EAAE5H,OACA4H,EAAC,oBAAgBC,GADH,YAAN,OAAmBA,KAEjC,IAEH,MAAM,GAAN,OAAU1H,EAAV,YAAuBuH,GCbzB,6M,6ECEaI,E,MAAOC,ECQb,SAASC,EAAT,GAAkE,IAAhD/E,EAA+C,EAA/CA,SAAgBlB,GAA+B,EAArCkG,KAAqC,EAA/BlG,MAASmB,EAAsB,0CACtE,OACE,kBAAC,EAAD,eACEgF,QAAQ,OACRC,cAAc,SACdC,SAAS,IACThF,OAAO,OACPiF,SAAUtG,EAAO,EAAI,GACjBmB,GAEHD,G,aCjBMqF,E,MAAOP,ECGb,SAASQ,EAAT,GAA0D,IAAtCtF,EAAqC,EAArCA,SAAaC,EAAwB,4BAC9D,OACE,kBAAC,EAAD,CACEsF,UAAU,YACVC,SAAS,WACTrF,OAAO,OACPsF,SAAS,UAET,kBAAC,EAASxF,EAAQD,ICZjB,SAAS0F,EAAWzF,GACzB,OACE,uCACE0F,KAAK,eACLC,oBAAoB,gBACpBC,QAAQ,YACRpL,MAAM,OACN0F,OAAO,QACHF,GAEJ,2BACE,0BAAM6F,EAAE,yiB,gDCVT,SAASC,EAAT,GAAkE,IAAlD/F,EAAiD,EAAjDA,SAAaC,EAAoC,4BACtE,OACE,kBAAC,IAAD,iBAAmBA,EAAnB,CAA0BrF,OAAO,WAC9BoF,G,sBCIA,SAASgG,EAAT,GAA4D,IAA7ChG,EAA4C,EAA5CA,SAAgBlB,GAA4B,EAAlCkG,KAAkC,EAA5BlG,MAASmB,EAAmB,0CAChE,OACE,kBAAC,EAAD,eACEgF,QAAQ,OACRC,cAAc,MACdzK,MAAM,OACNgH,UAAU,IACV2D,SAAUtG,EAAO,EAAI,GACjBmB,GAEHD,G,aClBMiG,E,OAAanB,E,SCF1B,6pB,2ECIMoB,EAAyBvM,YAAqB,mBAEvCwM,EAAsC,eAE5C,SAASxK,IAAiB,IAAD,EACwBuK,EACpDC,GAF4B,mBAK9B,MAAO,CACLzK,WAN4B,KAO5B0K,cAP4B,MCJzB,SAASC,IAA0B,IAAD,EACD1K,IAA9BD,EAD+B,EAC/BA,WAAY0K,EADmB,EACnBA,cAEpB,OACE,kBAAC,IAAD,CACEvC,MAAM,cACN/I,MAAOY,EACPX,SAAU,SAACC,GAAD,OACRoL,EAAcpL,EAAIJ,OAAOE,QAE3BwL,WAAY,KAEZ,4BAAQxL,MAAM,gBAAd,gBACA,4BAAQA,MAAM,YAAd,aCjBN,qE,yHCAO,SAASvB,EAAWgN,GACzB,OAAOA,EAAQC,OAAO,GAAGC,cAAgBF,EAAQhJ,MAAM,GAGlD,SAASmJ,EAAuBC,GAAmB,IAAD,cAChCA,GAAhBC,EADgD,KACxCC,EADwC,WAEvD,OAAOD,EAAIlC,QACT,SAACoC,EAASC,EAAKC,GAAf,4BACKF,GADL,YAEKD,EAAKnC,QAAO,SAACrI,EAAGuK,GAAJ,OAAaA,EAAII,GAAJ,sBAAa3K,GAAb,CAAgBuK,EAAII,KAAM3K,IAAI,CAAC0K,QAE7D,M,gCCXJ,6Z,+ECEME,EACJ,sFAEK,SAAexD,IAAtB,+B,4CAAO,kCAAApH,EAAA,sEACa6K,MAAMD,GADnB,cACCE,EADD,gBAEaA,EAAIC,OAFjB,cAECC,EAFD,OAICC,EAAOC,IAAOC,SAASH,GACvBnK,EAAYuK,OAAOC,KAAKJ,GAAMnJ,KAAI,SAAAoG,GAAQ,MAAK,CACnDP,KAAMO,EACN5C,MAAO2F,EAAK/C,GAAU5C,UAPnB,kBAUEzE,GAVF,4C,gGCDA,WACLZ,EACAxC,GAFK,eAAAuC,EAAA,sEAIkB,IAAIsL,IAAQ,CACjCC,KAAM9N,IACLqD,OAAOR,MAAM,CACdgI,EAAGH,YAAclI,GACjBuL,KAAM,UARH,cAICC,EAJD,yBAWEA,EAASC,KAAKC,MAAM7J,KAAI,SAAAiG,GAAI,MAAK,CACtCJ,KAAMI,EAAKJ,KACXjE,IAAKqE,EAAK6D,SACVC,MAAO,CACLlE,KAAMI,EAAK8D,MAAMC,MACjBpI,IAAMqE,EAAK8D,MAAcD,SACzBG,UAAWhE,EAAK8D,MAAMG,YAExBC,UAAWlE,EAAKmE,WAChBC,YAAapE,EAAKoE,YAClBjE,SAAUH,EAAKG,SACfkE,MAAOrE,EAAKsE,iBACZC,MAAOvE,EAAKwE,YACZC,OAAQzE,EAAK0E,uBAxBV,4C,+FCEA,WACLxM,GADK,iBAAAD,EAAA,6DAGC0M,EAAQzQ,YAAqBgE,EAAehD,UAAUV,YAHvD,SAKeoQ,QAAQC,IAC1B3M,EAAeY,UAAUH,OACrBT,EAAeY,UAAUiB,KAAI,SAAAoG,GAAQ,OAAI7H,EAAWqM,EAAOxE,MAC3D,CAAC7H,EAAWqM,KARb,cAKCpM,EALD,yBAWE+J,YAAQ/J,IAXV,4C,+BAcQD,E,gFAAf,WAA0BqM,EAAexE,GAAzC,eAAAlI,EAAA,sEACsC6M,YAClC3E,EACI,CACEA,WACAwE,SAEF,CAAEA,UAPV,cACQpM,EADR,yBASSA,EAAMwB,IAAIgL,IATnB,4C,sBAyBA,SAASA,EAAWC,GAClB,MAAO,CACLpF,KAAMoF,EAAapF,KACnBjE,IAAKqJ,EAAarJ,IAClBmI,MAAO,CACLlE,KAAMoF,EAAaC,OACnBtJ,IAAI,sBAAD,OAAwBqJ,EAAaC,QACxCjB,UAAWgB,EAAaE,QAE1Bd,YAAaY,EAAaZ,YAC1BjE,SAAU6E,EAAa7E,SACvBgF,cAAeH,EAAaG,cAC5Bd,MAAOW,EAAaX,MACpBe,mBAAoBJ,EAAaI,mBACjCb,MAAOS,EAAaT,OCtDjB,SAASjM,EACdhB,EACAY,EACAxC,GAEA,OAAQ4B,GACN,IAAK,eACH,OFRC,SAAP,oCEQa+N,CAAsBnN,EAAgBxC,GAC/C,IAAK,WACH,ODRC,SAAP,kCCQa4P,CAAmBpN,ICdhC,qE,6NCoBO,SAASqN,EAAT,GAAsD,IAAlC3J,EAAiC,EAAjCA,SAAaC,EAAoB,4BAC1D,OACE,kBAAC,IAAD,eACExF,MAAO,IACP0F,OAAQ,IACRtB,aAAc,GACduC,UAAW,EACXX,WAAW,QACX/F,QAAS,IACLuF,GAEHD,GAUA,SAAS4J,EAAT,GAAqE,IAGtEL,EAH4BzJ,EAAyC,EAAzCA,KAAMxG,EAAmC,EAAnCA,UAC9B4D,EAAciG,cAAdjG,UAGR,GAAI4C,EAAKyJ,cACPA,EAAgBzJ,EAAKyJ,kBAChB,CACL,IAAMhF,EAAWrH,EAAU2M,MACzB,SAAAtF,GAAQ,OAAIA,EAASP,OAASlE,EAAKyE,YAErCgF,EAAa,OAAGhF,QAAH,IAAGA,OAAH,EAAGA,EAAU5C,MAG5B,OACE,kBAAC,IAAD,CAAQ1G,eAAe,iBACrB,kBAAC,IAAD,CAAK2D,WAAW,UACd,kBAAC,IAAD,CACEG,YAAa,EACboG,SAAU,GACV1K,MAAO,GACP0F,OAAQ,GACRsF,SAAS,UAET,kBAAC,IAAD,CAAOhL,MAAO,GAAI0F,OAAQ,GAAI2J,IAAKhK,EAAKoI,MAAME,aAEhD,kBAAC,IAAD,CAAQnN,eAAe,SAAS6D,MAAI,GAClC,kBAAC,IAAD,CAAMjE,KAAMiF,EAAKoI,MAAMnI,IAAK4B,MAAM,UAAUoI,eAAe,QACzD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS7J,KAAM,KAAMJ,EAAKoI,MAAMlE,OAElC,kBAAC,IAAD,KACE,kBAAC,IAAD,wBAILlE,EAAK0J,oBACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK5K,WAAW,UACd,kBAAC,IAAD,CAAMI,KAAK,OAAOkB,KAAM,GAAIyB,MAAM,UAAUD,aAAc,IAC1D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMsI,SAAU,IAAhB,UACMlK,EAAK0J,mBADX,kBAE6B,QAAzBlQ,EAAUV,WACN,QADJ,eAEYU,EAAUV,kBAQpC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMiC,KAAMiF,EAAKC,IAAKgK,eAAe,QACnC,kBAAC,IAAD,CAAS7J,KAAM,IAAKyB,MAAM,WACvB7B,EAAKkE,QAIZ,kBAAC,IAAD,CAAKrJ,cAAe,IAClB,kBAAC,IAAD,CAAMuF,KAAM,IAAKyB,MAAM,SAAvB,gBACa,IACX,kBAAC,IAAD,CACE9G,KAAMiF,EAAKoI,MAAMnI,IACjB4B,MAAM,UACNoI,eAAe,QAEdjK,EAAKoI,MAAMlE,MAEblE,EAAKwI,WACJ,6CAAMvP,IAAO+G,EAAKwI,WAAWrP,OAAO,mBAK5C,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAKkH,OAAQ,IACX,kBAAC,IAAD,KAAWL,EAAK0I,gBAItB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ9G,aAAc,IACpB,kBAAC,IAAD,CAAK9C,WAAW,UACb2K,GACC,kBAAC,IAAD,CAAMvK,KAAK,cAAc2C,MAAO4H,EAAe7H,aAAc,IAE/D,kBAAC,IAAD,KAAO5B,EAAKyE,YAGhB,kBAAC,IAAD,CAAQ7C,aAAc,IACpB,kBAAC,IAAD,CACE7G,KAAI,UAAKiF,EAAKC,IAAV,eACJ4B,MAAM,UACNoI,eAAe,QAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQrI,aAAc,GACpB,kBAAC,IAAD,CAAM1C,KAAK,aAAa2C,MAAM,aAEhC,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAO7B,EAAK2I,WAKpB,kBAAC,IAAD,CAAQ/G,aAAc,IACpB,kBAAC,IAAD,CACE7G,KAAI,UAAKiF,EAAKC,IAAV,oBACJ4B,MAAM,UACNoI,eAAe,QAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQrI,aAAc,GACpB,kBAAC,IAAD,CAAM1C,KAAK,OAAO2C,MAAM,aAE1B,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAO7B,EAAK6I,WAKnB7I,EAAK+I,QACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEhO,KAAI,UAAKiF,EAAKC,IAAV,WACJ4B,MAAM,UACNoI,eAAe,QAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQrI,aAAc,GACpB,kBAAC,IAAD,CAAM1C,KAAK,QAAQ2C,MAAM,aAE3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAO7B,EAAK+I,cAWvB,SAASoB,IACd,OACE,kBAAC,IAAD,CACE9J,OAAQ,IACR1F,MAAO,IACP2F,MAAO,EACPC,aAAa,UACbC,eAAgBC,IAAaC,OAAOC,WAAWC,MAC/CC,UAAU,mBAEV,0BAAMC,EAAE,KAAKC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAItG,MAAM,MAAM0F,OAAO,OACpD,0BAAMS,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAItG,MAAM,MAAM0F,OAAO,OACrD,0BAAMS,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAItG,MAAM,MAAM0F,OAAO,OACpD,0BAAMS,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAItG,MAAM,MAAM0F,OAAO,OACpD,0BAAMS,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAItG,MAAM,MAAM0F,OAAO,OACrD,0BAAMS,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAItG,MAAM,MAAM0F,OAAO,OACrD,0BAAMS,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAItG,MAAM,KAAK0F,OAAO,W","file":"static/js/main.0c8c1bb1.chunk.js","sourcesContent":["import moment from 'moment';\nimport { capitalize } from '../utils';\n\nexport type TimeRangeIncrements = 'year' | 'month' | 'week' | 'day';\n\nexport type TimeRangeRecurense = 'yearly' | 'monthly' | 'weekly' | 'daily';\n\nexport type TimeRange = {\n  increments: TimeRangeIncrements;\n  from: string;\n  to: string;\n};\n\nconst RECURENSE_TO_INCREMENTS: Readonly<Record<\n  TimeRangeRecurense,\n  TimeRangeIncrements\n>> = {\n  yearly: 'year',\n  monthly: 'month',\n  weekly: 'week',\n  daily: 'day'\n};\n\nexport function toTimeRangeIncrement(\n  timeRangeRecurense: TimeRangeRecurense\n): TimeRangeIncrements {\n  return RECURENSE_TO_INCREMENTS[timeRangeRecurense];\n}\n\nconst INCREMENTS_TO_RECURENSE: Readonly<Record<\n  TimeRangeIncrements,\n  TimeRangeRecurense\n>> = {\n  year: 'yearly',\n  month: 'monthly',\n  week: 'weekly',\n  day: 'daily'\n};\n\nexport function toTimeRangeRecurense(\n  timeRangeIncrement: TimeRangeIncrements\n): TimeRangeRecurense {\n  return INCREMENTS_TO_RECURENSE[timeRangeIncrement];\n}\n\nconst TIME_RANGE_FORMAT = 'YYYY-MM-DD';\n\nexport function toTimeRange(\n  timeRangeRecurense: TimeRangeRecurense,\n  timeRangeOffset = 0\n): TimeRange {\n  const increments = toTimeRangeIncrement(timeRangeRecurense);\n\n  const from = moment()\n    .subtract(1 + timeRangeOffset, increments)\n    .format(TIME_RANGE_FORMAT);\n\n  const to = moment(from)\n    .add(1, increments)\n    .format(TIME_RANGE_FORMAT);\n\n  return {\n    increments,\n    from,\n    to\n  };\n}\n\nexport function createTimeRange(\n  increments: TimeRangeIncrements,\n  timeRangeOffset = 0\n) {\n  const recurense = toTimeRangeRecurense(increments);\n  return toTimeRange(recurense, timeRangeOffset);\n}\n\nexport function fromNow(timeRange: TimeRange) {\n  return capitalize(moment(timeRange.from).fromNow());\n}\n\nconst PRETTY_FORMAT = 'MMMM DD, YYYY';\n\nexport function prettyFormat(timeRange: TimeRange) {\n  const from = moment(timeRange.from).format(PRETTY_FORMAT);\n  const to = moment(timeRange.to).format(PRETTY_FORMAT);\n  return `${from} – ${to}`;\n}\n","import createPersistedState from 'use-persisted-state';\n\nconst usePersistedPersonalAccessToken = createPersistedState(\n  'grs-github-personal-access-token'\n);\n\nconst initialState = '';\n\nexport function usePersonalAccessToken() {\n  const [\n    persistedPersonalAccessToken,\n    setPersistedPersonalAccessToken\n  ] = usePersistedPersonalAccessToken(initialState);\n\n  return {\n    personalAccessToken: persistedPersonalAccessToken,\n    setPersonalAccessToken: setPersistedPersonalAccessToken\n  } as const;\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport { Button, Column, Heading, Link, Popover, Row, TextInput } from '../ui';\nimport { usePersonalAccessToken } from './use-personal-access-token';\n\nexport function PersonalAccessToken() {\n  return (\n    <Popover content={({ close }) => <PopoverBody close={close} />}>\n      <Button appearance=\"minimal\">Add a personal access token</Button>\n    </Popover>\n  );\n}\n\ntype PopoverBodyProps = { close(): void };\n\nfunction PopoverBody({ close }: PopoverBodyProps) {\n  const {\n    personalAccessToken: persistedPersonalAccessToken,\n    setPersonalAccessToken: setPersistedPersonalAccessToken\n  } = usePersonalAccessToken();\n\n  const [personalAccesToken, setPersonalAccessToken] = useState(\n    persistedPersonalAccessToken\n  );\n\n  function onPersonalAccessTokenChange(evt: ChangeEvent<HTMLInputElement>) {\n    setPersonalAccessToken(evt.target.value);\n  }\n\n  function onSaveClick() {\n    setPersistedPersonalAccessToken(personalAccesToken);\n    close();\n  }\n\n  return (\n    <Column width={280} padding={16}>\n      <Row paddingBottom={16}>\n        <Heading>\n          <Link target=\"_blank\" href=\"https://github.com/settings/tokens\">\n            Generate a token\n          </Link>{' '}\n          and add it below to avoid hitting the rate limit.\n        </Heading>\n      </Row>\n      <Row paddingBottom={16}>\n        <TextInput\n          value={personalAccesToken}\n          onChange={onPersonalAccessTokenChange}\n        />\n      </Row>\n      <Row paddingBottom={16} justifyContent=\"flex-end\">\n        <Button appearance=\"primary\" intent=\"success\" onClick={onSaveClick}>\n          Save\n        </Button>\n      </Row>\n    </Column>\n  );\n}\n","import { SearchQuery } from './search-query';\n\nexport type Search = {\n  loading: boolean;\n  queries: SearchQuery[];\n};\n\nexport function createSearch(queries: SearchQuery[], loading: boolean): Search {\n  return {\n    queries,\n    loading\n  };\n}\n","import { Repo } from '../repo';\nimport { TimeRange } from '../time';\n\nexport type SearchQuery = {\n  timeRange: TimeRange;\n  loading: boolean;\n  results: Repo[] | null;\n};\n\nexport function createSearchQuery(\n  timeRange: TimeRange,\n  loading: boolean,\n  results: Repo[] | null = null\n): SearchQuery {\n  return {\n    timeRange,\n    loading,\n    results\n  };\n}\n","import React, { useEffect } from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { useInView } from 'react-intersection-observer';\nimport { RepoCard, RepoCardContent, RepoCardLoader } from '../repo';\nimport {\n  LanguagesSelectMenu,\n  TimeRangesPopoverMenu,\n  useSearchCriteria\n} from '../search-criteria';\nimport { SearchTypesSelectField, useSearchType } from '../search-type';\nimport { fromNow, prettyFormat, TimeRange } from '../time';\nimport {\n  Column,\n  defaultTheme,\n  Heading,\n  IconButton,\n  Pane,\n  Row,\n  RowProps,\n  Text\n} from '../ui';\nimport { SearchQuery as Query } from './search-query';\nimport { useInfiniteSearch } from './use-infinite-search';\n\nexport function InfiniteSearch() {\n  const { searchType } = useSearchType();\n  const { refreshTimeRange } = useSearchCriteria();\n  const {\n    queries,\n    fetchInitialSearch,\n    isFetchingInitialSearch,\n    fetchNextSearch,\n    isFetchingNextSearch\n  } = useInfiniteSearch();\n\n  useEffect(() => {\n    fetchInitialSearch();\n  }, [fetchInitialSearch]);\n\n  const showFooter =\n    searchType === 'most-starred' &&\n    !isFetchingInitialSearch &&\n    !isFetchingNextSearch &&\n    queries.some(query => query.results && query.results.length);\n\n  return (\n    <Column width={1032} margin=\"auto\">\n      <SearchHeader refresh={refreshTimeRange} />\n      {isFetchingInitialSearch ? (\n        <SearchQueryLoader repoCount={12} />\n      ) : (\n        <>\n          {queries.map((query, index) => (\n            <SearchQuery\n              key={JSON.stringify(query.timeRange)}\n              index={index}\n              query={query}\n            />\n          ))}\n        </>\n      )}\n      {showFooter && <SearchQueryFooter onVisible={fetchNextSearch} />}\n    </Column>\n  );\n}\n\nfunction SearchHeader({ refresh }: { refresh(): void }) {\n  return (\n    <Row paddingX={16} alignItems=\"center\" marginBottom={32}>\n      <Column grow>\n        <SearchTypesSelectField />\n      </Column>\n      <Column marginRight={16}>\n        <LanguagesSelectMenu />\n      </Column>\n      <Column marginRight={16}>\n        <TimeRangesPopoverMenu />\n      </Column>\n      <Column>\n        <IconButton icon=\"refresh\" onClick={refresh} aria-label=\"refresh\" />\n      </Column>\n    </Row>\n  );\n}\n\nfunction SearchQueryFooter({ onVisible }: { onVisible: () => any }) {\n  const [ref, inView] = useInView({ threshold: 0 });\n\n  useEffect(() => {\n    if (inView) {\n      onVisible();\n    }\n  }, [inView, onVisible]);\n\n  return (\n    <div ref={ref}>\n      <SearchQueryLoader repoCount={3} />\n    </div>\n  );\n}\n\nfunction SearchQueryLoader({ repoCount }: { repoCount: number }) {\n  return (\n    <>\n      <SearchQueryHeader>\n        <SearchQueryHeaderLoader />\n      </SearchQueryHeader>\n      <Row flexWrap=\"wrap\" justifyContent=\"center\">\n        {Array.from(Array(repoCount)).map((_, index) => (\n          <RepoCard key={index} marginX={16}>\n            <RepoCardLoader />\n          </RepoCard>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nfunction SearchQuery({ query, index }: { query: Query; index: number }) {\n  return query.loading ? (\n    <SearchQueryLoader repoCount={12} />\n  ) : (\n    <div data-testid={`query-${index}`}>\n      <SearchQueryHeader>\n        <SearchQueryHeaderContent timeRange={query.timeRange} />\n      </SearchQueryHeader>\n      <Row flexWrap=\"wrap\" justifyContent=\"center\">\n        {query.results?.map(repo => (\n          <RepoCard key={repo.url} marginX={16}>\n            <RepoCardContent repo={repo} timeRange={query.timeRange} />\n          </RepoCard>\n        ))}\n      </Row>\n    </div>\n  );\n}\n\nfunction SearchQueryHeader({ children, ...props }: RowProps) {\n  return (\n    <Row paddingX={16} alignItems=\"center\" marginBottom={32} {...props}>\n      {children}\n    </Row>\n  );\n}\n\nfunction SearchQueryHeaderContent({ timeRange }: { timeRange: TimeRange }) {\n  return (\n    <Column grow>\n      <Row>\n        <Heading size={600}>{fromNow(timeRange)}</Heading>\n      </Row>\n      <Row>\n        <Text>{prettyFormat(timeRange)}</Text>\n      </Row>\n    </Column>\n  );\n}\n\nfunction SearchQueryHeaderLoader() {\n  return (\n    <Pane width={264} height={44}>\n      <ContentLoader\n        height={44}\n        width={264}\n        speed={1}\n        primaryColor=\"#e8eaef\"\n        secondaryColor={defaultTheme.colors.background.tint2}\n        ariaLabel=\"Search query header loading...\"\n      >\n        <rect x=\"0\" y=\"0\" rx=\"4\" ry=\"4\" width=\"100\" height=\"22\" />\n        <rect x=\"0\" y=\"26\" rx=\"4\" ry=\"4\" width=\"264\" height=\"18\" />\n      </ContentLoader>\n    </Pane>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { useMountedState } from 'react-use';\nimport { fetchRepos } from '../api';\nimport { usePersonalAccessToken } from '../personal-access-token';\nimport {\n  createSearchCriteria,\n  useSearchCriteria,\n  SearchCriteria\n} from '../search-criteria';\nimport { useSearchType } from '../search-type';\nimport { createTimeRange } from '../time';\nimport { createSearch, Search } from './search';\nimport { createSearchQuery } from './search-query';\nimport { Repo } from '../repo';\n\ntype FetchSearchConfig = {\n  searchCriteria: SearchCriteria;\n  getLoadingState(state: Search): Search;\n  getResolvedState(repos: Repo[], state: Search): Search;\n};\n\nexport function useInfiniteSearch() {\n  const isMounted = useMountedState();\n  const { personalAccessToken } = usePersonalAccessToken();\n  const { searchType } = useSearchType();\n  const { getSearchCriteria } = useSearchCriteria();\n  const [searchState, setSearchState] = useState(createSearch([], true));\n\n  const fetchSearch = useCallback(\n    async ({\n      searchCriteria,\n      getLoadingState,\n      getResolvedState\n    }: FetchSearchConfig) => {\n      setSearchState(state => getLoadingState(state));\n\n      const repos = await fetchRepos(\n        searchType,\n        searchCriteria,\n        personalAccessToken\n      );\n\n      if (isMounted()) {\n        setSearchState(state => getResolvedState(repos, state));\n      }\n    },\n    [isMounted, personalAccessToken, searchType]\n  );\n\n  const fetchInitialSearch = useCallback(async () => {\n    fetchSearch({\n      searchCriteria: getSearchCriteria(),\n      getLoadingState: () =>\n        createSearch(\n          [createSearchQuery(getSearchCriteria().timeRange, true)],\n          true\n        ),\n      getResolvedState: repos =>\n        createSearch(\n          [createSearchQuery(getSearchCriteria().timeRange, false, repos)],\n          false\n        )\n    });\n  }, [fetchSearch, getSearchCriteria]);\n\n  const fetchNextSearch = useCallback(async () => {\n    const nextTimeRange = createTimeRange(\n      getSearchCriteria().timeRange.increments,\n      searchState.queries.length\n    );\n\n    const nextQuery = createSearchQuery(nextTimeRange, true);\n\n    fetchSearch({\n      searchCriteria: createSearchCriteria(\n        getSearchCriteria().languages,\n        nextTimeRange\n      ),\n      getLoadingState: search => {\n        const queries = [...search.queries, nextQuery];\n        return createSearch(queries, search.loading);\n      },\n      getResolvedState: (repos, search) => {\n        const queries = [\n          ...search.queries.filter(query => query !== nextQuery),\n          createSearchQuery(nextTimeRange, false, repos)\n        ];\n        return createSearch(queries, false);\n      }\n    });\n  }, [fetchSearch, getSearchCriteria, searchState.queries.length]);\n\n  const nextSearch =\n    searchState.queries.length > 0 ? searchState.queries.slice(-1)[0] : null;\n\n  return {\n    queries: searchState.queries,\n    fetchInitialSearch,\n    isFetchingInitialSearch: searchState.loading,\n    fetchNextSearch,\n    isFetchingNextSearch: searchState.loading || nextSearch?.loading\n  } as const;\n}\n","import 'intersection-observer';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './app';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nrender(<App />, rootElement);\n","import React from 'react';\nimport { PersonalAccessToken } from '../personal-access-token';\nimport { InfiniteSearch } from '../search';\nimport {\n  Button,\n  Column,\n  defaultTheme,\n  GithubIcon,\n  Heading,\n  Row,\n  Text\n} from '../ui';\n\nexport function App() {\n  return (\n    <Column>\n      <Row\n        elevation={1}\n        backgroundColor={defaultTheme.palette.blue.base}\n        paddingX={8}\n        minHeight={64}\n        alignItems=\"center\"\n      >\n        <Column paddingRight={16} grow>\n          <Heading size={700} color=\"white\">\n            Gihtub Repository Search\n          </Heading>\n        </Column>\n        <Column>\n          <Button\n            is=\"a\"\n            href=\"https://github.com/eloiqs/github-repository-search\"\n            target=\"_blank\"\n            appearance=\"minimal\"\n            iconBefore={\n              (\n                <GithubIcon\n                  color=\"white\"\n                  width=\"16px\"\n                  style={{ marginRight: 8, marginLeft: -3 }}\n                />\n              ) as any\n            }\n          >\n            <Text color=\"white\">View Source</Text>\n          </Button>\n        </Column>\n      </Row>\n      <Row>\n        <Column width=\"100%\">\n          <Row\n            marginBottom={32}\n            background=\"orangeTint\"\n            paddingY={8}\n            justifyContent=\"center\"\n          >\n            <PersonalAccessToken />\n          </Row>\n          <Row>\n            <InfiniteSearch />\n          </Row>\n        </Column>\n      </Row>\n    </Column>\n  );\n}\n","import { SearchReposParams } from '@octokit/rest';\nimport { TimeRange, toTimeRange } from '../time';\n\nexport type SearchCriteria = Omit<SearchReposParams, 'q' | 'star'> & {\n  languages: string[];\n  timeRange: TimeRange;\n};\n\nexport function createSearchCriteria(\n  languages: string[] = [],\n  timeRange = toTimeRange('yearly')\n): SearchCriteria {\n  return {\n    languages,\n    timeRange,\n    order: 'desc',\n    page: 0,\n    per_page: 20\n  };\n}\n","import { useCallback } from 'react';\nimport createPersistedState from 'use-persisted-state';\nimport { createTimeRange } from '../time';\nimport { createSearchCriteria, SearchCriteria } from './search-criteria';\n\nexport const initialSearchCriteriaState = createSearchCriteria();\n\nconst usePersistedSearchCriteria = createPersistedState('grs-search-criteria');\n\nexport function useSearchCriteria() {\n  const [\n    persistedSearchCriteria,\n    setPersistedSearchCriteria\n  ] = usePersistedSearchCriteria(initialSearchCriteriaState);\n\n  const getSearchCriteria = useCallback(() => {\n    return getRefreshedSearchCriteria(persistedSearchCriteria);\n  }, [persistedSearchCriteria]);\n\n  const refreshTimeRange = useCallback(() => {\n    setPersistedSearchCriteria(criteria =>\n      getRefreshedSearchCriteria(criteria)\n    );\n  }, [setPersistedSearchCriteria]);\n\n  return {\n    getSearchCriteria,\n    setSearchCriteria: setPersistedSearchCriteria,\n    refreshTimeRange\n  } as const;\n}\n\nfunction getRefreshedSearchCriteria(criteria: SearchCriteria) {\n  return createSearchCriteria(\n    criteria.languages,\n    createTimeRange(criteria.timeRange.increments)\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSearchType } from '../search-type';\nimport { TimeRangeRecurense, toTimeRange, toTimeRangeRecurense } from '../time';\nimport { Button, Menu, Popover } from '../ui';\nimport { capitalize } from '../utils';\nimport { createSearchCriteria } from './search-criteria';\nimport { useSearchCriteria } from './use-search-criteria';\n\nexport function TimeRangesPopoverMenu() {\n  const { searchType } = useSearchType();\n  const { getSearchCriteria, setSearchCriteria } = useSearchCriteria();\n  const [timeRangeRecurense, setTimeRangeRecurense] = useState(\n    toTimeRangeRecurense(getSearchCriteria().timeRange.increments)\n  );\n\n  useEffect(() => {\n    if (searchType === 'trending' && timeRangeRecurense === 'yearly') {\n      setTimeRangeRecurense('monthly');\n      setSearchCriteria(criteria =>\n        createSearchCriteria(criteria.languages, toTimeRange('monthly'))\n      );\n    }\n  }, [searchType, setSearchCriteria, timeRangeRecurense]);\n\n  function onSelect(timeRangeRecurense: TimeRangeRecurense, close: () => void) {\n    return function() {\n      setTimeRangeRecurense(timeRangeRecurense);\n      setSearchCriteria(criteria =>\n        createSearchCriteria(\n          criteria.languages,\n          toTimeRange(timeRangeRecurense)\n        )\n      );\n      close();\n    };\n  }\n\n  return (\n    <Popover\n      content={({ close }) => (\n        <Menu>\n          <Menu.Group>\n            {searchType !== 'trending' && (\n              <Menu.Item onSelect={onSelect('yearly', close)}>Yearly</Menu.Item>\n            )}\n            <Menu.Item onSelect={onSelect('monthly', close)}>Monthly</Menu.Item>\n            <Menu.Item onSelect={onSelect('weekly', close)}>Weekly</Menu.Item>\n            <Menu.Item onSelect={onSelect('daily', close)}>Daily</Menu.Item>\n          </Menu.Group>\n        </Menu>\n      )}\n    >\n      <Button iconBefore=\"calendar\" data-testid=\"time-range-filter\">\n        {capitalize(timeRangeRecurense)}\n      </Button>\n    </Popover>\n  );\n}\n","import moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useMountedState } from 'react-use';\nimport createPersistedState from 'use-persisted-state';\nimport { fetchLanguages } from '../api';\n\nconst usePersistedLanguages = createPersistedState('grs-languages');\n\nexport type Language = {\n  name: string;\n  color: string;\n};\n\nexport type LanguageState = {\n  languages: Language[];\n  timestamp: string | null;\n};\n\nexport const initialLanguagesState: LanguageState = {\n  languages: [],\n  timestamp: null\n};\n\nexport function useLanguages() {\n  const isMounted = useMountedState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [\n    { languages: persistedLanguages, timestamp },\n    setPersistedLanguages\n  ] = usePersistedLanguages(initialLanguagesState);\n\n  useEffect(() => {\n    if (!timestamp || moment().diff(moment(timestamp), 'days') > 0) {\n      (async () => {\n        setIsLoading(true);\n\n        const languages = await fetchLanguages();\n\n        if (isMounted()) {\n          const timestamp = moment().format();\n          if (\n            JSON.stringify(languages) !== JSON.stringify(persistedLanguages)\n          ) {\n            setPersistedLanguages({ languages, timestamp });\n          }\n          // still need to update timestamp if languages did not change\n          setPersistedLanguages(state => ({ ...state, timestamp }));\n          setIsLoading(false);\n        }\n      })();\n    }\n  }, [isMounted, persistedLanguages, setPersistedLanguages, timestamp]);\n\n  return { languages: persistedLanguages, isLoading } as const;\n}\n","import React, { useState } from 'react';\nimport { Button, SelectMenu, SelectMenuItem } from '../ui';\nimport { createSearchCriteria } from './search-criteria';\nimport { useLanguages } from './use-languages';\nimport { useSearchCriteria } from './use-search-criteria';\n\nexport function LanguagesSelectMenu() {\n  const { getSearchCriteria, setSearchCriteria } = useSearchCriteria();\n  const { languages } = useLanguages();\n  const [selectedLanguages, setSelectedLanguages] = useState(\n    getSearchCriteria().languages\n  );\n\n  function onSelect(item: SelectMenuItem) {\n    const selected = [...selectedLanguages, item.value] as string[];\n    setSelectedLanguages(selected);\n    setSearchCriteria(criteria =>\n      createSearchCriteria(selected, criteria.timeRange)\n    );\n  }\n\n  function onDeselect(deselectedItem: SelectMenuItem) {\n    const languages = selectedLanguages.filter(\n      language => language !== deselectedItem.value\n    );\n    setSelectedLanguages(languages);\n    setSearchCriteria(criteria =>\n      createSearchCriteria(languages, criteria.timeRange)\n    );\n  }\n\n  const label = selectedLanguages.length\n    ? selectedLanguages.join(', ')\n    : 'Filter languages';\n\n  const options = languages.map(({ name }) => ({ label: name, value: name }));\n\n  return (\n    <SelectMenu\n      isMultiSelect\n      title=\"Filter languages\"\n      options={options}\n      selected={selectedLanguages}\n      onSelect={onSelect}\n      onDeselect={onDeselect}\n    >\n      <Button iconBefore=\"filter\" data-testid=\"languages-filter\">\n        {label}\n      </Button>\n    </SelectMenu>\n  );\n}\n","import { SearchCriteria } from './search-criteria';\n\nexport function toQueryString(criteria: SearchCriteria) {\n  const { from, to } = criteria.timeRange;\n  const created = `created:${from}..${to}`;\n\n  if (!criteria.languages.length) return created;\n\n  const languages = criteria.languages.reduce((q, lang) => {\n    if (!q.length) return `language:${lang}`;\n    return q + `+language:${lang}`;\n  }, '');\n\n  return `${languages}+${created}`;\n}\n","export * from './TimeRangesPopoverMenu';\nexport * from './LanguagesSelectMenu';\nexport * from './search-criteria';\nexport * from './to-query-string';\nexport * from './use-languages';\nexport * from './use-search-criteria';\n","import * as evergreen from 'evergreen-ui';\n\nexport const Pane = evergreen.Pane;\nexport type PaneProps = evergreen.PaneProps;\n","import React from 'react';\nimport { Pane, PaneProps } from './Pane';\n\nexport type ColumnProps = Omit<\n  PaneProps,\n  'display' | 'flexDirection' | 'minWidth' | 'height'\n> & {\n  grow?: boolean;\n};\n\nexport function Column({ children, card, grow, ...props }: ColumnProps) {\n  return (\n    <Pane\n      display=\"flex\"\n      flexDirection=\"column\"\n      minWidth=\"0\"\n      height=\"100%\"\n      flexGrow={grow ? 1 : 0}\n      {...props}\n    >\n      {children}\n    </Pane>\n  );\n}\n","import * as evergreen from 'evergreen-ui';\n\nexport type TextProps = evergreen.TextProps;\nexport const Text = evergreen.Text;\n","import React from 'react';\nimport { Pane } from './Pane';\nimport { Text, TextProps } from './Text';\n\nexport type FadeTextProps = TextProps;\n\nexport function FadeText({ children, ...props }: FadeTextProps) {\n  return (\n    <Pane\n      className=\"fade-text\"\n      position=\"relative\"\n      height=\"100%\"\n      overflow=\"hidden\"\n    >\n      <Text {...props}>{children}</Text>\n    </Pane>\n  );\n}\n","import React from 'react';\n\nexport function GithubIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill=\"currentColor\"\n      preserveAspectRatio=\"xMidYMid meet\"\n      viewBox=\"0 0 40 40\"\n      width=\"100%\"\n      height=\"100%\"\n      {...props}\n    >\n      <g>\n        <path d=\"m20 0c-11 0-20 9-20 20 0 8.8 5.7 16.3 13.7 19 1 0.2 1.3-0.5 1.3-1 0-0.5 0-2 0-3.7-5.5 1.2-6.7-2.4-6.7-2.4-0.9-2.3-2.2-2.9-2.2-2.9-1.9-1.2 0.1-1.2 0.1-1.2 2 0.1 3.1 2.1 3.1 2.1 1.7 3 4.6 2.1 5.8 1.6 0.2-1.3 0.7-2.2 1.3-2.7-4.5-0.5-9.2-2.2-9.2-9.8 0-2.2 0.8-4 2.1-5.4-0.2-0.5-0.9-2.6 0.2-5.3 0 0 1.7-0.5 5.5 2 1.6-0.4 3.3-0.6 5-0.6 1.7 0 3.4 0.2 5 0.7 3.8-2.6 5.5-2.1 5.5-2.1 1.1 2.8 0.4 4.8 0.2 5.3 1.3 1.4 2.1 3.2 2.1 5.4 0 7.6-4.7 9.3-9.2 9.8 0.7 0.6 1.4 1.9 1.4 3.7 0 2.7 0 4.9 0 5.5 0 0.6 0.3 1.2 1.3 1 8-2.7 13.7-10.2 13.7-19 0-11-9-20-20-20z\" />\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\nimport { Link as EvergreenLink, LinkProps } from 'evergreen-ui';\n\nexport function Link({ children, ...props }: Omit<LinkProps, 'target'>) {\n  return (\n    <EvergreenLink {...props} target=\"_blank\">\n      {children}\n    </EvergreenLink>\n  );\n}\n","import React from 'react';\nimport { Pane, PaneProps } from './Pane';\n\nexport type RowProps = Omit<\n  PaneProps,\n  'display' | 'flexDirection' | 'width'\n> & {\n  grow?: boolean;\n};\n\nexport function Row({ children, card, grow, ...props }: RowProps) {\n  return (\n    <Pane\n      display=\"flex\"\n      flexDirection=\"row\"\n      width=\"100%\"\n      minHeight=\"0\"\n      flexGrow={grow ? 1 : 0}\n      {...props}\n    >\n      {children}\n    </Pane>\n  );\n}\n","import * as evergreen from 'evergreen-ui';\n\nexport const SelectMenu = evergreen.SelectMenu;\nexport interface SelectMenuItem extends evergreen.SelectMenuItem {}\n","export * from './Button';\nexport * from './Card';\nexport * from './Column';\nexport * from './default-theme';\nexport * from './FadeText';\nexport * from './GithubIcon';\nexport * from './Heading';\nexport * from './Icon';\nexport * from './IconButton';\nexport * from './Image';\nexport * from './Link';\nexport * from './Menu';\nexport * from './Pane';\nexport * from './Popover';\nexport * from './Row';\nexport * from './Scroll';\nexport * from './SelectField';\nexport * from './SelectMenu';\nexport * from './Spinner';\nexport * from './Text';\nexport * from './TextInput';\n","import createPersistedState from 'use-persisted-state';\n\nexport type SearchTypes = 'most-starred' | 'trending';\n\nconst usePersistedSearchType = createPersistedState('grs-search-type');\n\nexport const initialSearchTypeState: SearchTypes = 'most-starred';\n\nexport function useSearchType() {\n  const [persistedSearchType, setPersistedSearchType] = usePersistedSearchType(\n    initialSearchTypeState\n  );\n\n  return {\n    searchType: persistedSearchType,\n    setSearchType: setPersistedSearchType\n  } as const;\n}\n","import React from 'react';\nimport { SelectField } from '../ui';\nimport { SearchTypes, useSearchType } from './use-search-type';\n\nexport function SearchTypesSelectField() {\n  const { searchType, setSearchType } = useSearchType();\n\n  return (\n    <SelectField\n      label=\"Search type\"\n      value={searchType}\n      onChange={(evt: React.ChangeEvent<HTMLSelectElement>) =>\n        setSearchType(evt.target.value as SearchTypes)\n      }\n      inputWidth={240}\n    >\n      <option value=\"most-starred\">Most starred</option>\n      <option value=\"trending\">Trending</option>\n    </SelectField>\n  );\n}\n","export * from './SearchTypesSelectField';\nexport * from './use-search-type';\n","export function capitalize(_string: string) {\n  return _string.charAt(0).toUpperCase() + _string.slice(1);\n}\n\nexport function flatZip<T extends any>(arrs: T[][]): T[] {\n  const [arr, ...rest] = arrs;\n  return arr.reduce<T[]>(\n    (flatArr, val, i) => [\n      ...flatArr,\n      ...rest.reduce((a, arr) => (arr[i] ? [...a, arr[i]] : a), [val])\n    ],\n    []\n  );\n}\n","export * from './repo';\nexport * from './RepoCard';\n","import jsyaml from 'js-yaml';\n\nconst githubLinguistYmlUrl =\n  'https://raw.githubusercontent.com/github/linguist/master/lib/linguist/languages.yml';\n\nexport async function fetchLanguages() {\n  const res = await fetch(githubLinguistYmlUrl);\n  const yml = await res.text();\n\n  const json = jsyaml.safeLoad(yml);\n  const languages = Object.keys(json).map(language => ({\n    name: language,\n    color: json[language].color\n  }));\n\n  return languages;\n}\n","import Octokit from '@octokit/rest';\nimport { Repo } from '../repo';\nimport { SearchCriteria, toQueryString } from '../search-criteria';\n\nexport async function fetchMostStarredRepos(\n  searchCriteria: SearchCriteria,\n  personalAccessToken: string\n): Promise<Repo[]> {\n  const response = await new Octokit({\n    auth: personalAccessToken\n  }).search.repos({\n    q: toQueryString(searchCriteria),\n    sort: 'stars'\n  });\n\n  return response.data.items.map(item => ({\n    name: item.name,\n    url: item.html_url,\n    owner: {\n      name: item.owner.login,\n      url: (item.owner as any).html_url,\n      avatarUrl: item.owner.avatar_url\n    },\n    createdAt: item.created_at,\n    description: item.description,\n    language: item.language,\n    stars: item.stargazers_count,\n    forks: item.forks_count,\n    issues: item.open_issues_count\n  }));\n}\n","import { fetchRepositories } from '@huchenme/github-trending';\nimport { Repo } from '../repo';\nimport { SearchCriteria } from '../search-criteria';\nimport { toTimeRangeRecurense } from '../time';\nimport { flatZip } from '../utils';\n\nexport async function fetchTrendingRepos(\n  searchCriteria: SearchCriteria\n): Promise<Repo[]> {\n  const since = toTimeRangeRecurense(searchCriteria.timeRange.increments);\n\n  const repos = await Promise.all(\n    searchCriteria.languages.length\n      ? searchCriteria.languages.map(language => fetchRepos(since, language))\n      : [fetchRepos(since)]\n  );\n\n  return flatZip(repos);\n}\n\nasync function fetchRepos(since: string, language?: string): Promise<Repo[]> {\n  const repos: TrendingRepo[] = await fetchRepositories(\n    language\n      ? {\n          language,\n          since\n        }\n      : { since }\n  );\n  return repos.map(createRepo);\n}\n\nexport type TrendingRepo = {\n  name: string;\n  url: string;\n  author: string;\n  avatar: string;\n  description: string;\n  language: string;\n  languageColor: string;\n  stars: number;\n  currentPeriodStars: number;\n  forks: number;\n};\n\nfunction createRepo(trendingRepo: TrendingRepo): Repo {\n  return {\n    name: trendingRepo.name,\n    url: trendingRepo.url,\n    owner: {\n      name: trendingRepo.author,\n      url: `https://github.com/${trendingRepo.author}`,\n      avatarUrl: trendingRepo.avatar\n    },\n    description: trendingRepo.description,\n    language: trendingRepo.language,\n    languageColor: trendingRepo.languageColor,\n    stars: trendingRepo.stars,\n    currentPeriodStars: trendingRepo.currentPeriodStars,\n    forks: trendingRepo.forks\n  };\n}\n","import { SearchTypes } from '../search-type';\nimport { fetchMostStarredRepos } from './most-starred-repos';\nimport { fetchTrendingRepos } from './trending-repos';\nimport { SearchCriteria } from '../search-criteria';\n\nexport function fetchRepos(\n  searchType: SearchTypes,\n  searchCriteria: SearchCriteria,\n  personalAccessToken: string\n) {\n  switch (searchType) {\n    case 'most-starred':\n      return fetchMostStarredRepos(searchCriteria, personalAccessToken);\n    case 'trending':\n      return fetchTrendingRepos(searchCriteria);\n  }\n}\n","export * from './fetch-languages';\nexport * from './fetch-repos';\n","import moment from 'moment';\nimport React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { useLanguages } from '../search-criteria';\nimport { TimeRange } from '../time';\nimport {\n  Card,\n  CardProps,\n  Column,\n  defaultTheme,\n  FadeText,\n  Heading,\n  Icon,\n  Image,\n  Link,\n  Row,\n  Text\n} from '../ui';\nimport { Repo } from './repo';\n\nexport function RepoCard({ children, ...props }: CardProps) {\n  return (\n    <Card\n      width={312}\n      height={264}\n      marginBottom={32}\n      elevation={2}\n      background=\"tint1\"\n      padding={16}\n      {...props}\n    >\n      {children}\n    </Card>\n  );\n}\n\ntype RepoCardContentProps = {\n  repo: Repo;\n  timeRange: TimeRange;\n};\n\nexport function RepoCardContent({ repo, timeRange }: RepoCardContentProps) {\n  const { languages } = useLanguages();\n\n  let languageColor: string | undefined;\n  if (repo.languageColor) {\n    languageColor = repo.languageColor;\n  } else {\n    const language = languages.find(\n      language => language.name === repo.language\n    );\n    languageColor = language?.color;\n  }\n\n  return (\n    <Column justifyContent=\"space-between\">\n      <Row alignItems=\"center\">\n        <Card\n          marginRight={8}\n          minWidth={32}\n          width={32}\n          height={32}\n          overflow=\"hidden\"\n        >\n          <Image width={32} height={32} src={repo.owner.avatarUrl} />\n        </Card>\n        <Column justifyContent=\"center\" grow>\n          <Link href={repo.owner.url} color=\"neutral\" textDecoration=\"none\">\n            <Row>\n              <Heading size={400}>{repo.owner.name}</Heading>\n            </Row>\n            <Row>\n              <Text>View Profile</Text>\n            </Row>\n          </Link>\n        </Column>\n        {repo.currentPeriodStars && (\n          <Column>\n            <Row alignItems=\"center\">\n              <Icon icon=\"star\" size={12} color=\"default\" paddingRight={4} />\n              <Column>\n                <Text fontSize={12}>\n                  {`${repo.currentPeriodStars} stars ${\n                    timeRange.increments === 'day'\n                      ? 'today'\n                      : `this ${timeRange.increments}`\n                  }`}\n                </Text>\n              </Column>\n            </Row>\n          </Column>\n        )}\n      </Row>\n      <Row>\n        <Column>\n          <Row>\n            <Column>\n              <Row>\n                <Link href={repo.url} textDecoration=\"none\">\n                  <Heading size={500} color=\"default\">\n                    {repo.name}\n                  </Heading>\n                </Link>\n              </Row>\n              <Row paddingBottom={12}>\n                <Text size={300} color=\"muted\">\n                  Built by ·{' '}\n                  <Link\n                    href={repo.owner.url}\n                    color=\"neutral\"\n                    textDecoration=\"none\"\n                  >\n                    {repo.owner.name}\n                  </Link>\n                  {repo.createdAt && (\n                    <> · {moment(repo.createdAt).format('MMM D, YYYY')}</>\n                  )}\n                </Text>\n              </Row>\n            </Column>\n            <Column />\n          </Row>\n          <Row height={62}>\n            <FadeText>{repo.description}</FadeText>\n          </Row>\n        </Column>\n      </Row>\n      <Row>\n        <Column paddingRight={12}>\n          <Row alignItems=\"center\">\n            {languageColor && (\n              <Icon icon=\"full-circle\" color={languageColor} paddingRight={4} />\n            )}\n            <Text>{repo.language}</Text>\n          </Row>\n        </Column>\n        <Column paddingRight={12}>\n          <Link\n            href={`${repo.url}/stargazers`}\n            color=\"neutral\"\n            textDecoration=\"none\"\n          >\n            <Row>\n              <Column paddingRight={4}>\n                <Icon icon=\"star-empty\" color=\"default\" />\n              </Column>\n              <Column>\n                <Text>{repo.stars}</Text>\n              </Column>\n            </Row>\n          </Link>\n        </Column>\n        <Column paddingRight={12}>\n          <Link\n            href={`${repo.url}/network/members`}\n            color=\"neutral\"\n            textDecoration=\"none\"\n          >\n            <Row>\n              <Column paddingRight={4}>\n                <Icon icon=\"fork\" color=\"default\" />\n              </Column>\n              <Column>\n                <Text>{repo.forks}</Text>\n              </Column>\n            </Row>\n          </Link>\n        </Column>\n        {repo.issues && (\n          <Column>\n            <Link\n              href={`${repo.url}/issues`}\n              color=\"neutral\"\n              textDecoration=\"none\"\n            >\n              <Row>\n                <Column paddingRight={4}>\n                  <Icon icon=\"issue\" color=\"default\" />\n                </Column>\n                <Column>\n                  <Text>{repo.issues}</Text>\n                </Column>\n              </Row>\n            </Link>\n          </Column>\n        )}\n      </Row>\n    </Column>\n  );\n}\n\nexport function RepoCardLoader() {\n  return (\n    <ContentLoader\n      height={232}\n      width={280}\n      speed={1}\n      primaryColor=\"#e8eaef\"\n      secondaryColor={defaultTheme.colors.background.tint2}\n      ariaLabel=\"Repo loading...\"\n    >\n      <rect x=\"40\" y=\"4\" rx=\"4\" ry=\"4\" width=\"140\" height=\"12\" />\n      <rect x=\"40\" y=\"24\" rx=\"4\" ry=\"4\" width=\"120\" height=\"10\" />\n      <rect x=\"0\" y=\"72\" rx=\"4\" ry=\"4\" width=\"100\" height=\"12\" />\n      <rect x=\"0\" y=\"91\" rx=\"4\" ry=\"4\" width=\"200\" height=\"10\" />\n      <rect x=\"0\" y=\"118\" rx=\"4\" ry=\"4\" width=\"280\" height=\"56\" />\n      <rect x=\"0\" y=\"220\" rx=\"4\" ry=\"4\" width=\"260\" height=\"12\" />\n      <rect x=\"0\" y=\"4\" rx=\"4\" ry=\"4\" width=\"32\" height=\"32\" />\n    </ContentLoader>\n  );\n}\n"],"sourceRoot":""}