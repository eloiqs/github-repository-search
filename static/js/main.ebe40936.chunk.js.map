{"version":3,"sources":["time/index.ts","personal-access-token/use-personal-access-token.ts","personal-access-token/PersonalAccessToken.tsx","search/search.ts","search/search-query.ts","search/InfiniteSearch.tsx","search/use-infinite-search.ts","index.tsx","app/App.tsx","search-criteria/search-criteria.ts","search-criteria/use-search-criteria.ts","search-criteria/TimeRangesPopoverMenu.tsx","search-criteria/use-languages.ts","search-criteria/LanguagesSelectMenu.tsx","search-criteria/to-query-string.ts","search-criteria/index.ts","ui/Pane.tsx","ui/Column.tsx","ui/Text.tsx","ui/FadeText.tsx","ui/GithubIcon.tsx","ui/Link.tsx","ui/Row.tsx","ui/SelectMenu.tsx","ui/index.ts","search-type/use-search-type.ts","search-type/SearchTypesSelectField.tsx","search-type/index.ts","utils/index.ts","api/fetch-languages.ts","api/most-starred-repos.ts","api/trending-repos.ts","api/fetch-repos.ts","api/index.ts","repo/index.ts","repo/RepoCard.tsx"],"names":["RECURENSE_TO_INCREMENTS","yearly","monthly","weekly","daily","INCREMENTS_TO_RECURENSE","year","month","week","day","toTimeRangeRecurense","timeRangeIncrement","TIME_RANGE_FORMAT","toTimeRange","timeRangeRecurense","timeRangeOffset","increments","toTimeRangeIncrement","from","moment","subtract","format","to","add","createTimeRange","fromNow","timeRange","capitalize","PRETTY_FORMAT","prettyFormat","usePersistedPersonalAccessToken","createPersistedState","initialState","usePersonalAccessToken","PersonalAccessToken","content","close","PopoverBody","appearance","persistedPersonalAccessToken","setPersistedPersonalAccessToken","useState","personalAccesToken","setPersonalAccessToken","width","padding","paddingBottom","target","href","value","onChange","evt","justifyContent","intent","onClick","createSearch","queries","loading","createSearchQuery","results","InfiniteSearch","useSearchType","searchType","useSearchCriteria","refreshTimeRange","loadNextOnScroll","isMounted","useMountedState","personalAccessToken","searchCriteria","search","setSearch","load","useCallback","a","fetchRepos","repos","useEffect","loadNext","nextTimeRange","length","nextQuery","nextCriteria","createSearchCriteria","languages","filter","query","windowScroll","useWindowScroll","some","window","innerHeight","y","document","documentElement","offsetHeight","useInfiniteSearch","margin","SearchHeader","refresh","SearchQueryLoader","repoCount","map","SearchQuery","key","JSON","stringify","every","paddingX","alignItems","marginBottom","grow","marginRight","icon","aria-label","SearchQueryHeader","SearchQueryHeaderLoader","flexWrap","Array","_","index","marginX","SearchQueryHeaderContent","repo","url","children","props","size","height","speed","primaryColor","secondaryColor","defaultTheme","colors","background","tint2","ariaLabel","x","rx","ry","rootElement","getElementById","render","elevation","backgroundColor","palette","blue","base","minHeight","paddingRight","color","is","iconBefore","style","marginLeft","paddingY","order","page","per_page","usePersistedSearchCriteria","setSearchCriteria","criteria","TimeRangesPopoverMenu","setTimeRangeRecurense","onSelect","Group","Item","usePersistedLanguages","timestamp","useLanguages","isLoading","setIsLoading","persistedLanguages","setPersistedLanguages","diff","fetchLanguages","state","LanguagesSelectMenu","selectedLanguages","setSelectedLanguages","label","join","options","name","isMultiSelect","title","selected","item","onDeselect","deselectedItem","language","toQueryString","created","reduce","q","lang","Pane","evergreen","Column","card","display","flexDirection","minWidth","flexGrow","Text","FadeText","className","position","overflow","GithubIcon","fill","preserveAspectRatio","viewBox","d","Link","Row","SelectMenu","usePersistedSearchType","SearchTypesSelectField","setSearchType","inputWidth","_string","charAt","toUpperCase","slice","flatZip","arrs","arr","rest","flatArr","val","i","githubLinguistYmlUrl","fetch","res","text","yml","json","jsyaml","safeLoad","Object","keys","Octokit","auth","sort","response","data","items","html_url","owner","login","avatarUrl","avatar_url","createdAt","created_at","description","stars","stargazers_count","forks","forks_count","issues","open_issues_count","since","Promise","all","fetchRepositories","createRepo","trendingRepo","author","avatar","languageColor","currentPeriodStars","fetchMostStarredRepos","fetchTrendingRepos","RepoCard","RepoCardContent","find","src","textDecoration","fontSize","RepoCardLoader"],"mappings":"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","file":"static/js/main.ebe40936.chunk.js","sourcesContent":["import moment from 'moment';\nimport { capitalize } from '../utils';\n\nexport type TimeRangeIncrements = 'year' | 'month' | 'week' | 'day';\n\nexport type TimeRangeRecurense = 'yearly' | 'monthly' | 'weekly' | 'daily';\n\nexport type TimeRange = {\n  increments: TimeRangeIncrements;\n  from: string;\n  to: string;\n};\n\nconst RECURENSE_TO_INCREMENTS: Readonly<Record<\n  TimeRangeRecurense,\n  TimeRangeIncrements\n>> = {\n  yearly: 'year',\n  monthly: 'month',\n  weekly: 'week',\n  daily: 'day'\n};\n\nexport function toTimeRangeIncrement(\n  timeRangeRecurense: TimeRangeRecurense\n): TimeRangeIncrements {\n  return RECURENSE_TO_INCREMENTS[timeRangeRecurense];\n}\n\nconst INCREMENTS_TO_RECURENSE: Readonly<Record<\n  TimeRangeIncrements,\n  TimeRangeRecurense\n>> = {\n  year: 'yearly',\n  month: 'monthly',\n  week: 'weekly',\n  day: 'daily'\n};\n\nexport function toTimeRangeRecurense(\n  timeRangeIncrement: TimeRangeIncrements\n): TimeRangeRecurense {\n  return INCREMENTS_TO_RECURENSE[timeRangeIncrement];\n}\n\nconst TIME_RANGE_FORMAT = 'YYYY-MM-DD';\n\nexport function toTimeRange(\n  timeRangeRecurense: TimeRangeRecurense,\n  timeRangeOffset = 0\n): TimeRange {\n  const increments = toTimeRangeIncrement(timeRangeRecurense);\n\n  const from = moment()\n    .subtract(1 + timeRangeOffset, increments)\n    .format(TIME_RANGE_FORMAT);\n\n  const to = moment(from)\n    .add(1, increments)\n    .format(TIME_RANGE_FORMAT);\n\n  return {\n    increments,\n    from,\n    to\n  };\n}\n\nexport function createTimeRange(\n  increments: TimeRangeIncrements,\n  timeRangeOffset = 0\n) {\n  const recurense = toTimeRangeRecurense(increments);\n  return toTimeRange(recurense, timeRangeOffset);\n}\n\nexport function fromNow(timeRange: TimeRange) {\n  return capitalize(moment(timeRange.from).fromNow());\n}\n\nconst PRETTY_FORMAT = 'MMMM DD, YYYY';\n\nexport function prettyFormat(timeRange: TimeRange) {\n  const from = moment(timeRange.from).format(PRETTY_FORMAT);\n  const to = moment(timeRange.to).format(PRETTY_FORMAT);\n  return `${from} – ${to}`;\n}\n","import createPersistedState from 'use-persisted-state';\n\nconst usePersistedPersonalAccessToken = createPersistedState(\n  'grs-github-personal-access-token'\n);\n\nconst initialState = '';\n\nexport function usePersonalAccessToken() {\n  const [\n    persistedPersonalAccessToken,\n    setPersistedPersonalAccessToken\n  ] = usePersistedPersonalAccessToken(initialState);\n\n  return [persistedPersonalAccessToken, setPersistedPersonalAccessToken] as [\n    typeof persistedPersonalAccessToken,\n    typeof setPersistedPersonalAccessToken\n  ];\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport { Button, Column, Heading, Link, Popover, Row, TextInput } from '../ui';\nimport { usePersonalAccessToken } from './use-personal-access-token';\n\nexport function PersonalAccessToken() {\n  return (\n    <Popover content={({ close }) => <PopoverBody close={close} />}>\n      <Button appearance=\"minimal\">Add a personal access token</Button>\n    </Popover>\n  );\n}\n\ntype PopoverBodyProps = { close(): void };\n\nfunction PopoverBody({ close }: PopoverBodyProps) {\n  const [\n    persistedPersonalAccessToken,\n    setPersistedPersonalAccessToken\n  ] = usePersonalAccessToken();\n\n  const [personalAccesToken, setPersonalAccessToken] = useState(\n    persistedPersonalAccessToken\n  );\n\n  function onPersonalAccessTokenChange(evt: ChangeEvent<HTMLInputElement>) {\n    setPersonalAccessToken(evt.target.value);\n  }\n\n  function onSaveClick() {\n    setPersistedPersonalAccessToken(personalAccesToken);\n    close();\n  }\n\n  return (\n    <Column width={280} padding={16}>\n      <Row paddingBottom={16}>\n        <Heading>\n          <Link target=\"_blank\" href=\"https://github.com/settings/tokens\">\n            Generate a token\n          </Link>{' '}\n          and add it below to avoid hitting the rate limit.\n        </Heading>\n      </Row>\n      <Row paddingBottom={16}>\n        <TextInput\n          value={personalAccesToken}\n          onChange={onPersonalAccessTokenChange}\n        />\n      </Row>\n      <Row paddingBottom={16} justifyContent=\"flex-end\">\n        <Button appearance=\"primary\" intent=\"success\" onClick={onSaveClick}>\n          Save\n        </Button>\n      </Row>\n    </Column>\n  );\n}\n","import { SearchQuery } from './search-query';\n\nexport type Search = {\n  loading: boolean;\n  queries: SearchQuery[];\n};\n\nexport function createSearch(\n  queries = [] as SearchQuery[],\n  loading = true\n): Search {\n  return {\n    loading,\n    queries\n  };\n}\n","import { Repo } from '../repo';\nimport { TimeRange } from '../time';\n\nexport type SearchQuery = {\n  timeRange: TimeRange;\n  loading: boolean;\n  results: Repo[] | null;\n};\n\nexport function createSearchQuery(\n  timeRange: TimeRange,\n  results: Repo[] | null = null,\n  loading = true\n): SearchQuery {\n  return {\n    timeRange,\n    loading,\n    results\n  };\n}\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { RepoCard, RepoCardContent, RepoCardLoader } from '../repo';\nimport {\n  LanguagesSelectMenu,\n  TimeRangesPopoverMenu,\n  useSearchCriteria\n} from '../search-criteria';\nimport { SearchTypesSelectField, useSearchType } from '../search-type';\nimport { fromNow, prettyFormat, TimeRange } from '../time';\nimport {\n  Column,\n  defaultTheme,\n  Heading,\n  IconButton,\n  Pane,\n  Row,\n  RowProps,\n  Text\n} from '../ui';\nimport { SearchQuery as Query } from './search-query';\nimport { useInfiniteSearch } from './use-infinite-search';\n\nexport function InfiniteSearch() {\n  const [searchType] = useSearchType();\n  const [, , refreshTimeRange] = useSearchCriteria();\n  const [search] = useInfiniteSearch(searchType === 'most-starred');\n\n  return (\n    <Column width={1032} margin=\"auto\">\n      <SearchHeader refresh={refreshTimeRange} />\n      {search.loading ? (\n        <SearchQueryLoader repoCount={12} />\n      ) : (\n        <>\n          {search.queries.map(query => (\n            <SearchQuery key={JSON.stringify(query.timeRange)} query={query} />\n          ))}\n          {searchType === 'most-starred' &&\n            search.queries.every(query => !query.loading) && (\n              <SearchQueryLoader repoCount={3} />\n            )}\n        </>\n      )}\n    </Column>\n  );\n}\n\nfunction SearchHeader({ refresh }: { refresh(): void }) {\n  return (\n    <Row paddingX={16} alignItems=\"center\" marginBottom={32}>\n      <Column grow>\n        <SearchTypesSelectField />\n      </Column>\n      <Column marginRight={16}>\n        <LanguagesSelectMenu />\n      </Column>\n      <Column marginRight={16}>\n        <TimeRangesPopoverMenu />\n      </Column>\n      <Column>\n        <IconButton icon=\"refresh\" onClick={refresh} aria-label=\"refresh\" />\n      </Column>\n    </Row>\n  );\n}\n\nfunction SearchQueryLoader({ repoCount }: { repoCount: number }) {\n  return (\n    <>\n      <SearchQueryHeader>\n        <SearchQueryHeaderLoader />\n      </SearchQueryHeader>\n      <Row flexWrap=\"wrap\" justifyContent=\"center\">\n        {Array.from(Array(repoCount)).map((_, index) => (\n          <RepoCard key={index} marginX={16}>\n            <RepoCardLoader />\n          </RepoCard>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nfunction SearchQuery({ query }: { query: Query }) {\n  return query.loading ? (\n    <SearchQueryLoader repoCount={12} />\n  ) : (\n    <>\n      <SearchQueryHeader>\n        <SearchQueryHeaderContent timeRange={query.timeRange} />\n      </SearchQueryHeader>\n      <Row flexWrap=\"wrap\" justifyContent=\"center\">\n        {(query.results || []).map(repo => (\n          <RepoCard key={repo.url} marginX={16}>\n            <RepoCardContent repo={repo} timeRange={query.timeRange} />\n          </RepoCard>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nfunction SearchQueryHeader({ children, ...props }: RowProps) {\n  return (\n    <Row paddingX={16} alignItems=\"center\" marginBottom={32} {...props}>\n      {children}\n    </Row>\n  );\n}\n\nfunction SearchQueryHeaderContent({ timeRange }: { timeRange: TimeRange }) {\n  return (\n    <Column grow>\n      <Row>\n        <Heading size={600}>{fromNow(timeRange)}</Heading>\n      </Row>\n      <Row>\n        <Text>{prettyFormat(timeRange)}</Text>\n      </Row>\n    </Column>\n  );\n}\n\nfunction SearchQueryHeaderLoader() {\n  return (\n    <Pane width={264} height={44}>\n      <ContentLoader\n        height={44}\n        width={264}\n        speed={1}\n        primaryColor=\"#e8eaef\"\n        secondaryColor={defaultTheme.colors.background.tint2}\n        ariaLabel=\"Search query header loading...\"\n      >\n        <rect x=\"0\" y=\"0\" rx=\"4\" ry=\"4\" width=\"100\" height=\"22\" />\n        <rect x=\"0\" y=\"26\" rx=\"4\" ry=\"4\" width=\"264\" height=\"18\" />\n      </ContentLoader>\n    </Pane>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useMountedState, useWindowScroll } from 'react-use';\nimport { fetchRepos } from '../api';\nimport { usePersonalAccessToken } from '../personal-access-token';\nimport { createSearchCriteria, useSearchCriteria } from '../search-criteria';\nimport { useSearchType } from '../search-type';\nimport { createTimeRange } from '../time';\nimport { createSearch } from './search';\nimport { createSearchQuery } from './search-query';\n\nexport function useInfiniteSearch(loadNextOnScroll = true) {\n  const isMounted = useMountedState();\n  const [personalAccessToken] = usePersonalAccessToken();\n  const [searchType] = useSearchType();\n  const [searchCriteria] = useSearchCriteria();\n  const [search, setSearch] = useState(createSearch());\n\n  const load = useCallback(async () => {\n    setSearch(createSearch([createSearchQuery(searchCriteria.timeRange)]));\n\n    const repos = await fetchRepos(\n      searchType,\n      searchCriteria,\n      personalAccessToken\n    );\n\n    if (isMounted()) {\n      setSearch(\n        createSearch(\n          [createSearchQuery(searchCriteria.timeRange, repos, false)],\n          false\n        )\n      );\n    }\n  }, [isMounted, personalAccessToken, searchCriteria, searchType]);\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n  const loadNext = useCallback(async () => {\n    const nextTimeRange = createTimeRange(\n      searchCriteria.timeRange.increments,\n      search.queries.length\n    );\n\n    const nextQuery = createSearchQuery(nextTimeRange);\n    setSearch(search => {\n      const queries = [...search.queries, nextQuery];\n      return createSearch(queries, search.loading);\n    });\n\n    const nextCriteria = createSearchCriteria(\n      searchCriteria.languages,\n      nextTimeRange\n    );\n\n    const repos = await fetchRepos(\n      searchType,\n      nextCriteria,\n      personalAccessToken\n    );\n\n    if (isMounted()) {\n      setSearch(search => {\n        const queries = [\n          ...search.queries.filter(query => query !== nextQuery),\n          createSearchQuery(nextTimeRange, repos, false)\n        ];\n        return createSearch(queries, false);\n      });\n    }\n  }, [\n    isMounted,\n    personalAccessToken,\n    search.queries.length,\n    searchCriteria.languages,\n    searchCriteria.timeRange.increments,\n    searchType\n  ]);\n\n  const windowScroll = useWindowScroll();\n\n  useEffect(() => {\n    if (!loadNextOnScroll) return;\n\n    if (search.loading || search.queries.some(query => query.loading)) return;\n\n    if (\n      window.innerHeight + windowScroll.y >=\n      document.documentElement.offsetHeight\n    ) {\n      loadNext();\n    }\n  }, [\n    loadNext,\n    loadNextOnScroll,\n    search.loading,\n    search.queries,\n    windowScroll.y\n  ]);\n\n  return [search, load, loadNext] as [\n    typeof search,\n    typeof load,\n    typeof loadNext\n  ];\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './app';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nrender(<App />, rootElement);\n","import React from 'react';\nimport { PersonalAccessToken } from '../personal-access-token';\nimport { InfiniteSearch } from '../search';\nimport {\n  Button,\n  Column,\n  defaultTheme,\n  GithubIcon,\n  Heading,\n  Row,\n  Text\n} from '../ui';\n\nexport function App() {\n  return (\n    <Column>\n      <Row\n        elevation={1}\n        backgroundColor={defaultTheme.palette.blue.base}\n        paddingX={8}\n        minHeight={64}\n        alignItems=\"center\"\n      >\n        <Column paddingRight={16} grow>\n          <Heading size={700} color=\"white\">\n            Gihtub Repository Search\n          </Heading>\n        </Column>\n        <Column>\n          <Button\n            is=\"a\"\n            href=\"https://github.com/eloiqs/github-repository-search\"\n            target=\"_blank\"\n            appearance=\"minimal\"\n            iconBefore={\n              (\n                <GithubIcon\n                  color=\"white\"\n                  width=\"16px\"\n                  style={{ marginRight: 8, marginLeft: -3 }}\n                />\n              ) as any\n            }\n          >\n            <Text color=\"white\">View Source</Text>\n          </Button>\n        </Column>\n      </Row>\n      <Row>\n        <Column width=\"100%\">\n          <Row\n            marginBottom={32}\n            background=\"orangeTint\"\n            paddingY={8}\n            justifyContent=\"center\"\n          >\n            <PersonalAccessToken />\n          </Row>\n          <Row>\n            <InfiniteSearch />\n          </Row>\n        </Column>\n      </Row>\n    </Column>\n  );\n}\n","import { SearchReposParams } from '@octokit/rest';\nimport { TimeRange, toTimeRange } from '../time';\n\nexport type SearchCriteria = Omit<SearchReposParams, 'q' | 'star'> & {\n  languages: string[];\n  timeRange: TimeRange;\n};\n\nexport function createSearchCriteria(\n  languages: string[] = [],\n  timeRange = toTimeRange('yearly')\n): SearchCriteria {\n  return {\n    languages,\n    timeRange,\n    order: 'desc',\n    page: 0,\n    per_page: 20\n  };\n}\n","import { useCallback } from 'react';\nimport createPersistedState from 'use-persisted-state';\nimport { createTimeRange } from '../time';\nimport { createSearchCriteria } from './search-criteria';\n\nexport const initialState = createSearchCriteria();\n\nconst usePersistedSearchCriteria = createPersistedState('grs-search-criteria');\n\nexport function useSearchCriteria() {\n  const [searchCriteria, setSearchCriteria] = usePersistedSearchCriteria(\n    initialState\n  );\n\n  const refreshTimeRange = useCallback(() => {\n    setSearchCriteria(criteria =>\n      createSearchCriteria(\n        criteria.languages,\n        createTimeRange(criteria.timeRange.increments)\n      )\n    );\n  }, [setSearchCriteria]);\n\n  return [searchCriteria, setSearchCriteria, refreshTimeRange] as [\n    typeof searchCriteria,\n    typeof setSearchCriteria,\n    typeof refreshTimeRange\n  ];\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSearchType } from '../search-type';\nimport { TimeRangeRecurense, toTimeRange, toTimeRangeRecurense } from '../time';\nimport { Button, Menu, Popover } from '../ui';\nimport { capitalize } from '../utils';\nimport { createSearchCriteria } from './search-criteria';\nimport { useSearchCriteria } from './use-search-criteria';\n\nexport function TimeRangesPopoverMenu() {\n  const [searchType] = useSearchType();\n  const [searchCriteria, setSearchCriteria] = useSearchCriteria();\n  const [timeRangeRecurense, setTimeRangeRecurense] = useState(\n    toTimeRangeRecurense(searchCriteria.timeRange.increments)\n  );\n\n  useEffect(() => {\n    if (searchType === 'trending' && timeRangeRecurense === 'yearly') {\n      setTimeRangeRecurense('monthly');\n      setSearchCriteria(criteria =>\n        createSearchCriteria(criteria.languages, toTimeRange('monthly'))\n      );\n    }\n  }, [searchType, setSearchCriteria, timeRangeRecurense]);\n\n  function onSelect(timeRangeRecurense: TimeRangeRecurense, close: () => void) {\n    return function() {\n      setTimeRangeRecurense(timeRangeRecurense);\n      setSearchCriteria(criteria =>\n        createSearchCriteria(\n          criteria.languages,\n          toTimeRange(timeRangeRecurense)\n        )\n      );\n      close();\n    };\n  }\n\n  return (\n    <Popover\n      content={({ close }) => (\n        <Menu>\n          <Menu.Group>\n            {searchType !== 'trending' && (\n              <Menu.Item onSelect={onSelect('yearly', close)}>Yearly</Menu.Item>\n            )}\n            <Menu.Item onSelect={onSelect('monthly', close)}>Monthly</Menu.Item>\n            <Menu.Item onSelect={onSelect('weekly', close)}>Weekly</Menu.Item>\n            <Menu.Item onSelect={onSelect('daily', close)}>Daily</Menu.Item>\n          </Menu.Group>\n        </Menu>\n      )}\n    >\n      <Button iconBefore=\"calendar\">{capitalize(timeRangeRecurense)}</Button>\n    </Popover>\n  );\n}\n","import moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useMountedState } from 'react-use';\nimport createPersistedState from 'use-persisted-state';\nimport { fetchLanguages } from '../api';\n\nconst usePersistedLanguages = createPersistedState('grs-languages');\n\nexport type Language = {\n  name: string;\n  color: string;\n};\n\nconst initialState = {\n  languages: [] as Language[],\n  timestamp: null as string | null\n};\n\nexport function useLanguages() {\n  const isMounted = useMountedState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [\n    { languages: persistedLanguages, timestamp },\n    setPersistedLanguages\n  ] = usePersistedLanguages(initialState);\n\n  useEffect(() => {\n    if (!timestamp || moment().diff(moment(timestamp), 'days') > 0) {\n      (async () => {\n        setIsLoading(true);\n\n        const languages = await fetchLanguages();\n\n        if (isMounted()) {\n          const timestamp = moment().format();\n          if (\n            JSON.stringify(languages) !== JSON.stringify(persistedLanguages)\n          ) {\n            setPersistedLanguages({ languages, timestamp });\n          }\n          // still need to update timestamp if languages did not change\n          setPersistedLanguages(state => ({ ...state, timestamp }));\n          setIsLoading(false);\n        }\n      })();\n    }\n  }, [isMounted, persistedLanguages, setPersistedLanguages, timestamp]);\n\n  return [persistedLanguages, isLoading] as [\n    typeof persistedLanguages,\n    typeof isLoading\n  ];\n}\n","import React, { useState } from 'react';\nimport { Button, SelectMenu, SelectMenuItem } from '../ui';\nimport { createSearchCriteria } from './search-criteria';\nimport { useLanguages } from './use-languages';\nimport { useSearchCriteria } from './use-search-criteria';\n\nexport function LanguagesSelectMenu() {\n  const [searchCriteria, setSearchCriteria] = useSearchCriteria();\n  const [languages] = useLanguages();\n  const [selectedLanguages, setSelectedLanguages] = useState(\n    searchCriteria.languages\n  );\n\n  function onSelect(item: SelectMenuItem) {\n    const selected = [...selectedLanguages, item.value] as string[];\n    setSelectedLanguages(selected);\n    setSearchCriteria(criteria =>\n      createSearchCriteria(selected, criteria.timeRange)\n    );\n  }\n\n  function onDeselect(deselectedItem: SelectMenuItem) {\n    const languages = selectedLanguages.filter(\n      language => language !== deselectedItem.value\n    );\n    setSelectedLanguages(languages);\n    setSearchCriteria(criteria =>\n      createSearchCriteria(languages, criteria.timeRange)\n    );\n  }\n\n  const label = selectedLanguages.length\n    ? selectedLanguages.join(', ')\n    : 'Filter languages';\n\n  const options = languages.map(({ name }) => ({ label: name, value: name }));\n\n  return (\n    <SelectMenu\n      isMultiSelect\n      title=\"Filter languages\"\n      options={options}\n      selected={selectedLanguages}\n      onSelect={onSelect}\n      onDeselect={onDeselect}\n    >\n      <Button iconBefore=\"filter\">{label}</Button>\n    </SelectMenu>\n  );\n}\n","import { SearchCriteria } from './search-criteria';\n\nexport function toQueryString(criteria: SearchCriteria) {\n  const { from, to } = criteria.timeRange;\n  const created = `created:${from}..${to}`;\n\n  if (!criteria.languages.length) return created;\n\n  const languages = criteria.languages.reduce((q, lang) => {\n    if (!q.length) return `language:${lang}`;\n    return q + `+language:${lang}`;\n  }, '');\n\n  return `${languages}+${created}`;\n}\n","export * from './TimeRangesPopoverMenu';\nexport * from './LanguagesSelectMenu';\nexport * from './search-criteria';\nexport * from './to-query-string';\nexport * from './use-languages';\nexport * from './use-search-criteria';\n","import * as evergreen from 'evergreen-ui';\n\nexport const Pane = evergreen.Pane;\nexport type PaneProps = evergreen.PaneProps;\n","import React from 'react';\nimport { Pane, PaneProps } from './Pane';\n\nexport type ColumnProps = Omit<\n  PaneProps,\n  'display' | 'flexDirection' | 'minWidth' | 'height'\n> & {\n  grow?: boolean;\n};\n\nexport function Column({ children, card, grow, ...props }: ColumnProps) {\n  return (\n    <Pane\n      display=\"flex\"\n      flexDirection=\"column\"\n      minWidth=\"0\"\n      height=\"100%\"\n      flexGrow={grow ? 1 : 0}\n      {...props}\n    >\n      {children}\n    </Pane>\n  );\n}\n","import * as evergreen from 'evergreen-ui';\n\nexport type TextProps = evergreen.TextProps;\nexport const Text = evergreen.Text;\n","import React from 'react';\nimport { Pane } from './Pane';\nimport { Text, TextProps } from './Text';\n\nexport type FadeTextProps = TextProps;\n\nexport function FadeText({ children, ...props }: FadeTextProps) {\n  return (\n    <Pane\n      className=\"fade-text\"\n      position=\"relative\"\n      height=\"100%\"\n      overflow=\"hidden\"\n    >\n      <Text {...props}>{children}</Text>\n    </Pane>\n  );\n}\n","import React from 'react';\n\nexport function GithubIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill=\"currentColor\"\n      preserveAspectRatio=\"xMidYMid meet\"\n      viewBox=\"0 0 40 40\"\n      width=\"100%\"\n      height=\"100%\"\n      {...props}\n    >\n      <g>\n        <path d=\"m20 0c-11 0-20 9-20 20 0 8.8 5.7 16.3 13.7 19 1 0.2 1.3-0.5 1.3-1 0-0.5 0-2 0-3.7-5.5 1.2-6.7-2.4-6.7-2.4-0.9-2.3-2.2-2.9-2.2-2.9-1.9-1.2 0.1-1.2 0.1-1.2 2 0.1 3.1 2.1 3.1 2.1 1.7 3 4.6 2.1 5.8 1.6 0.2-1.3 0.7-2.2 1.3-2.7-4.5-0.5-9.2-2.2-9.2-9.8 0-2.2 0.8-4 2.1-5.4-0.2-0.5-0.9-2.6 0.2-5.3 0 0 1.7-0.5 5.5 2 1.6-0.4 3.3-0.6 5-0.6 1.7 0 3.4 0.2 5 0.7 3.8-2.6 5.5-2.1 5.5-2.1 1.1 2.8 0.4 4.8 0.2 5.3 1.3 1.4 2.1 3.2 2.1 5.4 0 7.6-4.7 9.3-9.2 9.8 0.7 0.6 1.4 1.9 1.4 3.7 0 2.7 0 4.9 0 5.5 0 0.6 0.3 1.2 1.3 1 8-2.7 13.7-10.2 13.7-19 0-11-9-20-20-20z\" />\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\nimport { Link as EvergreenLink, LinkProps } from 'evergreen-ui';\n\nexport function Link({ children, ...props }: Omit<LinkProps, 'target'>) {\n  return (\n    <EvergreenLink {...props} target=\"_blank\">\n      {children}\n    </EvergreenLink>\n  );\n}\n","import React from 'react';\nimport { Pane, PaneProps } from './Pane';\n\nexport type RowProps = Omit<\n  PaneProps,\n  'display' | 'flexDirection' | 'width'\n> & {\n  grow?: boolean;\n};\n\nexport function Row({ children, card, grow, ...props }: RowProps) {\n  return (\n    <Pane\n      display=\"flex\"\n      flexDirection=\"row\"\n      width=\"100%\"\n      minHeight=\"0\"\n      flexGrow={grow ? 1 : 0}\n      {...props}\n    >\n      {children}\n    </Pane>\n  );\n}\n","import * as evergreen from 'evergreen-ui';\n\nexport const SelectMenu = evergreen.SelectMenu;\nexport interface SelectMenuItem extends evergreen.SelectMenuItem {}\n","export * from './Button';\nexport * from './Card';\nexport * from './Column';\nexport * from './default-theme';\nexport * from './FadeText';\nexport * from './GithubIcon';\nexport * from './Heading';\nexport * from './Icon';\nexport * from './IconButton';\nexport * from './Image';\nexport * from './Link';\nexport * from './Menu';\nexport * from './Pane';\nexport * from './Popover';\nexport * from './Row';\nexport * from './Scroll';\nexport * from './SelectField';\nexport * from './SelectMenu';\nexport * from './Spinner';\nexport * from './Text';\nexport * from './TextInput';\n","import createPersistedState from 'use-persisted-state';\n\nexport type SearchTypes = 'most-starred' | 'trending';\n\nconst usePersistedSearchType = createPersistedState('grs-search-type');\n\nconst initialState: SearchTypes = 'most-starred';\n\nexport function useSearchType() {\n  const [persistedSearchType, setPersistedSearchType] = usePersistedSearchType(\n    initialState\n  );\n\n  return [persistedSearchType, setPersistedSearchType] as [\n    typeof persistedSearchType,\n    typeof setPersistedSearchType\n  ];\n}\n","import React from 'react';\nimport { SelectField } from '../ui';\nimport { SearchTypes, useSearchType } from './use-search-type';\n\nexport function SearchTypesSelectField() {\n  const [searchType, setSearchType] = useSearchType();\n\n  return (\n    <SelectField\n      label=\"Search type\"\n      value={searchType}\n      onChange={(evt: React.ChangeEvent<HTMLSelectElement>) =>\n        setSearchType(evt.target.value as SearchTypes)\n      }\n      inputWidth={240}\n    >\n      <option value=\"most-starred\">Most starred</option>\n      <option value=\"trending\">Trending</option>\n    </SelectField>\n  );\n}\n","export * from './SearchTypesSelectField';\nexport * from './use-search-type';\n","export function capitalize(_string: string) {\n  return _string.charAt(0).toUpperCase() + _string.slice(1);\n}\n\nexport function flatZip<T extends any>(arrs: T[][]): T[] {\n  const [arr, ...rest] = arrs;\n  return arr.reduce<T[]>(\n    (flatArr, val, i) => [\n      ...flatArr,\n      ...rest.reduce((a, arr) => (arr[i] ? [...a, arr[i]] : a), [val])\n    ],\n    []\n  );\n}\n","import jsyaml from 'js-yaml';\n\nconst githubLinguistYmlUrl =\n  'https://raw.githubusercontent.com/github/linguist/master/lib/linguist/languages.yml';\n\nexport async function fetchLanguages() {\n  const res = await fetch(githubLinguistYmlUrl);\n  const yml = await res.text();\n\n  const json = jsyaml.safeLoad(yml);\n  const languages = Object.keys(json).map(language => ({\n    name: language,\n    color: json[language].color\n  }));\n\n  return languages;\n}\n","import Octokit from '@octokit/rest';\nimport { Repo } from '../repo';\nimport { SearchCriteria, toQueryString } from '../search-criteria';\n\nexport async function fetchMostStarredRepos(\n  searchCriteria: SearchCriteria,\n  personalAccessToken: string\n): Promise<Repo[]> {\n  const response = await new Octokit({\n    auth: personalAccessToken\n  }).search.repos({\n    q: toQueryString(searchCriteria),\n    sort: 'stars'\n  });\n\n  return response.data.items.map(item => ({\n    name: item.name,\n    url: item.html_url,\n    owner: {\n      name: item.owner.login,\n      url: (item.owner as any).html_url,\n      avatarUrl: item.owner.avatar_url\n    },\n    createdAt: item.created_at,\n    description: item.description,\n    language: item.language,\n    stars: item.stargazers_count,\n    forks: item.forks_count,\n    issues: item.open_issues_count\n  }));\n}\n","import { fetchRepositories } from '@huchenme/github-trending';\nimport { Repo } from '../repo';\nimport { SearchCriteria } from '../search-criteria';\nimport { toTimeRangeRecurense } from '../time';\nimport { flatZip } from '../utils';\n\nexport async function fetchTrendingRepos(\n  searchCriteria: SearchCriteria\n): Promise<Repo[]> {\n  const since = toTimeRangeRecurense(searchCriteria.timeRange.increments);\n\n  const repos = await Promise.all(\n    searchCriteria.languages.length\n      ? searchCriteria.languages.map(language => fetchRepos(since, language))\n      : [fetchRepos(since)]\n  );\n\n  return flatZip(repos);\n}\n\nasync function fetchRepos(since: string, language?: string): Promise<Repo[]> {\n  const repos: TrendingRepo[] = await fetchRepositories(\n    language\n      ? {\n          language,\n          since\n        }\n      : { since }\n  );\n  return repos.map(createRepo);\n}\n\nexport type TrendingRepo = {\n  name: string;\n  url: string;\n  author: string;\n  avatar: string;\n  description: string;\n  language: string;\n  languageColor: string;\n  stars: number;\n  currentPeriodStars: number;\n  forks: number;\n};\n\nfunction createRepo(trendingRepo: TrendingRepo): Repo {\n  return {\n    name: trendingRepo.name,\n    url: trendingRepo.url,\n    owner: {\n      name: trendingRepo.author,\n      url: `https://github.com/${trendingRepo.author}`,\n      avatarUrl: trendingRepo.avatar\n    },\n    description: trendingRepo.description,\n    language: trendingRepo.language,\n    languageColor: trendingRepo.languageColor,\n    stars: trendingRepo.stars,\n    currentPeriodStars: trendingRepo.currentPeriodStars,\n    forks: trendingRepo.forks\n  };\n}\n","import { SearchTypes } from '../search-type';\nimport { fetchMostStarredRepos } from './most-starred-repos';\nimport { fetchTrendingRepos } from './trending-repos';\nimport { SearchCriteria } from '../search-criteria';\n\nexport function fetchRepos(\n  searchType: SearchTypes,\n  searchCriteria: SearchCriteria,\n  personalAccessToken: string\n) {\n  switch (searchType) {\n    case 'most-starred':\n      return fetchMostStarredRepos(searchCriteria, personalAccessToken);\n    case 'trending':\n      return fetchTrendingRepos(searchCriteria);\n  }\n}\n","export * from './fetch-languages';\nexport * from './fetch-repos';\n","export * from './repo';\nexport * from './RepoCard';\n","import moment from 'moment';\nimport React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { useLanguages } from '../search-criteria';\nimport { TimeRange } from '../time';\nimport {\n  Card,\n  CardProps,\n  Column,\n  defaultTheme,\n  FadeText,\n  Heading,\n  Icon,\n  Image,\n  Link,\n  Row,\n  Text\n} from '../ui';\nimport { Repo } from './repo';\n\nexport function RepoCard({ children, ...props }: CardProps) {\n  return (\n    <Card\n      width={312}\n      height={264}\n      marginBottom={32}\n      elevation={2}\n      background=\"tint1\"\n      padding={16}\n      {...props}\n    >\n      {children}\n    </Card>\n  );\n}\n\ntype RepoCardContentProps = {\n  repo: Repo;\n  timeRange: TimeRange;\n};\n\nexport function RepoCardContent({ repo, timeRange }: RepoCardContentProps) {\n  const [languages] = useLanguages();\n\n  let languageColor: string | undefined;\n  if (repo.languageColor) {\n    languageColor = repo.languageColor;\n  } else {\n    const language = languages.find(\n      language => language.name === repo.language\n    );\n    languageColor = language && language.color;\n  }\n\n  return (\n    <Column justifyContent=\"space-between\">\n      <Row alignItems=\"center\">\n        <Card\n          marginRight={8}\n          minWidth={32}\n          width={32}\n          height={32}\n          overflow=\"hidden\"\n        >\n          <Image width={32} height={32} src={repo.owner.avatarUrl} />\n        </Card>\n        <Column justifyContent=\"center\" grow>\n          <Link href={repo.owner.url} color=\"neutral\" textDecoration=\"none\">\n            <Row>\n              <Heading size={400}>{repo.owner.name}</Heading>\n            </Row>\n            <Row>\n              <Text>View Profile</Text>\n            </Row>\n          </Link>\n        </Column>\n        {repo.currentPeriodStars && (\n          <Column>\n            <Row alignItems=\"center\">\n              <Icon icon=\"star\" size={12} color=\"default\" paddingRight={4} />\n              <Column>\n                <Text fontSize={12}>\n                  {`${repo.currentPeriodStars} stars ${\n                    timeRange.increments === 'day'\n                      ? 'today'\n                      : `this ${timeRange.increments}`\n                  }`}\n                </Text>\n              </Column>\n            </Row>\n          </Column>\n        )}\n      </Row>\n      <Row>\n        <Column>\n          <Row>\n            <Column>\n              <Row>\n                <Link href={repo.url} textDecoration=\"none\">\n                  <Heading size={500} color=\"default\">\n                    {repo.name}\n                  </Heading>\n                </Link>\n              </Row>\n              <Row paddingBottom={12}>\n                <Text size={300} color=\"muted\">\n                  Built by ·{' '}\n                  <Link\n                    href={repo.owner.url}\n                    color=\"neutral\"\n                    textDecoration=\"none\"\n                  >\n                    {repo.owner.name}\n                  </Link>\n                  {repo.createdAt && (\n                    <> · {moment(repo.createdAt).format('MMM D, YYYY')}</>\n                  )}\n                </Text>\n              </Row>\n            </Column>\n            <Column />\n          </Row>\n          <Row height={56}>\n            <FadeText>{repo.description}</FadeText>\n          </Row>\n        </Column>\n      </Row>\n      <Row>\n        <Column paddingRight={12}>\n          <Row alignItems=\"center\">\n            {languageColor && (\n              <Icon icon=\"full-circle\" color={languageColor} paddingRight={4} />\n            )}\n            <Text>{repo.language}</Text>\n          </Row>\n        </Column>\n        <Column paddingRight={12}>\n          <Link\n            href={`${repo.url}/stargazers`}\n            color=\"neutral\"\n            textDecoration=\"none\"\n          >\n            <Row>\n              <Column paddingRight={4}>\n                <Icon icon=\"star-empty\" color=\"default\" />\n              </Column>\n              <Column>\n                <Text>{repo.stars}</Text>\n              </Column>\n            </Row>\n          </Link>\n        </Column>\n        <Column paddingRight={12}>\n          <Link\n            href={`${repo.url}/network/members`}\n            color=\"neutral\"\n            textDecoration=\"none\"\n          >\n            <Row>\n              <Column paddingRight={4}>\n                <Icon icon=\"fork\" color=\"default\" />\n              </Column>\n              <Column>\n                <Text>{repo.forks}</Text>\n              </Column>\n            </Row>\n          </Link>\n        </Column>\n        {repo.issues && (\n          <Column>\n            <Link\n              href={`${repo.url}/issues`}\n              color=\"neutral\"\n              textDecoration=\"none\"\n            >\n              <Row>\n                <Column paddingRight={4}>\n                  <Icon icon=\"issue\" color=\"default\" />\n                </Column>\n                <Column>\n                  <Text>{repo.issues}</Text>\n                </Column>\n              </Row>\n            </Link>\n          </Column>\n        )}\n      </Row>\n    </Column>\n  );\n}\n\nexport function RepoCardLoader() {\n  return (\n    <ContentLoader\n      height={232}\n      width={280}\n      speed={1}\n      primaryColor=\"#e8eaef\"\n      secondaryColor={defaultTheme.colors.background.tint2}\n      ariaLabel=\"Repo loading...\"\n    >\n      <rect x=\"40\" y=\"4\" rx=\"4\" ry=\"4\" width=\"140\" height=\"12\" />\n      <rect x=\"40\" y=\"24\" rx=\"4\" ry=\"4\" width=\"120\" height=\"10\" />\n      <rect x=\"0\" y=\"72\" rx=\"4\" ry=\"4\" width=\"100\" height=\"12\" />\n      <rect x=\"0\" y=\"91\" rx=\"4\" ry=\"4\" width=\"200\" height=\"10\" />\n      <rect x=\"0\" y=\"118\" rx=\"4\" ry=\"4\" width=\"280\" height=\"56\" />\n      <rect x=\"0\" y=\"220\" rx=\"4\" ry=\"4\" width=\"260\" height=\"12\" />\n      <rect x=\"0\" y=\"4\" rx=\"4\" ry=\"4\" width=\"32\" height=\"32\" />\n    </ContentLoader>\n  );\n}\n"],"sourceRoot":""}